{"version":3,"sources":["components/GlobalStyles.jsx","components/Logo.jsx","components/AppNavbar.jsx","components/NavItem.jsx","components/AppSidebar.jsx","components/AppLayout.jsx","components/common/StyledLabel.jsx","components/batchAndInvoice/BatchList.jsx","__mocks__/billingPeriods.jsx","__mocks__/brandListData.jsx","__mocks__/channelListData.jsx","__mocks__/branchListData.jsx","__mocks__/batchListData.jsx","pages/BatchAndInvoice.jsx","__mocks__/clientData.jsx","components/billTypeList/EpdForm.jsx","components/billTypeList/EpdList.jsx","__mocks__/adjustmentData/adjustmentData.jsx","__mocks__/paymentData/paymentData.jsx","__mocks__/epoData.jsx","components/billTypeList/EpoForm.jsx","__mocks__/adjustmentSubTypeData.jsx","__mocks__/adjustmentTypeData.jsx","__mocks__/paymentTypeData.jsx","components/billTypeList/EpoList.jsx","components/billTypeList/SearchBox.jsx","__mocks__/epdData.jsx","__mocks__/pairoffData.jsx","components/billTypeList/PairoffList.jsx","components/billTypeList/PairoffForm.jsx","components/billTypeList/FundingAdjustmentList.jsx","components/billTypeList/TaxPenaltyList.jsx","__mocks__/billTypeData.jsx","pages/BillTypeList.jsx","components/clientList/ClientSearchBox.jsx","components/clientList/ClientList.jsx","pages/ClientList.jsx","components/dashboard/BillAmountByMonth.jsx","components/dashboard/OutstandingBillTypes.jsx","components/dashboard/TotalAdjustmentApplied.jsx","components/dashboard/TotalClients.jsx","components/dashboard/TotalOutstandingAmount.jsx","components/dashboard/TotalPaymentReceived.jsx","pages/Dashboard.jsx","components/importdata/ChannelCard.jsx","components/common/Fieldset.jsx","components/importdata/FileUpload.jsx","components/importdata/CoIssueButtonSet.jsx","components/importdata/CommonButtonSet.jsx","components/importdata/ImportedDataList.jsx","__mocks__/importedData.jsx","pages/ImportDataForm.jsx","components/batchForm/InvoiceList.jsx","components/viewInvoice/SearchBox.jsx","__mocks__/invoiceListData.jsx","pages/ViewInvoice.jsx","components/quickLinks/QuickLinkCard.jsx","pages/QuickLinks.jsx","pages/NotFound.jsx","components/paymentAdjustmentList/SearchBox.jsx","components/paymentAdjustmentList/PaymentList.jsx","components/paymentAdjustmentList/PaymentForm.jsx","components/paymentAdjustmentList/AdjustmentList.jsx","components/paymentAdjustmentList/AdjustmentForm.jsx","pages/PaymentAdjustmentList.jsx","components/batchForm/BatchStepper.jsx","components/batchForm/BatchStepperContentPanel.jsx","components/batchForm/BranchBillTypeBox.jsx","components/common/TransferList.jsx","components/batchForm/SuppressClientBillTypeBox.jsx","components/batchForm/BatchDetailTab.jsx","components/batchForm/BatchDetailTabPanel.jsx","components/batchForm/SearchBox.jsx","__mocks__/batchFormData.jsx","pages/BatchForm.jsx","components/clientDetail/General.jsx","components/clientDetail/Contacts.jsx","components/clientDetail/EpoBox.jsx","components/clientDetail/EpdBox.jsx","components/clientDetail/PairoffBox.jsx","components/clientDetail/BillTypes.jsx","components/clientDetail/PaymentBox.jsx","components/clientDetail/AdjustmentBox.jsx","components/clientDetail/PaymentAdjustments.jsx","components/clientDetail/Invoices.jsx","pages/ClientDetail.jsx","routes.jsx","theme/index.jsx","App.jsx","index.jsx"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Logo","alt","src","theme","logo","style","maxHeight","paddingTop","typography","paddingLeft","spacing","paddingRight","logoutPopover","borderRadius","alertPopover","alertPopoverItemDivider","borderBottom","primaryTypographyProps","fontSize","fontWeight","icon","minWidth","AppNavbar","classes","React","useState","anchorElLogout","setAnchorElLogout","anchorElAlert","setAnchorElAlert","openLogout","Boolean","logoutId","undefined","openAlert","alertId","AppBar","elevation","Toolbar","to","Typography","variant","className","Box","sx","flexGrow","IconButton","color","size","onClick","event","currentTarget","Badge","badgeContent","NotificationsOutlined","Input","Popover","id","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","display","flexDirection","justifyContent","alignItems","pb","ListItemIcon","component","align","Divider","Button","fullWidth","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","pt","button","letterSpacing","textTransform","s","active","palette","main","text","mr","listItem","paddingBottom","NavItem","href","Icon","title","location","useLocation","matchPath","path","end","pathname","disableGutters","RouterLink","items","subHeaderText","subItems","Link","ChartSquareBar","Refresh","ReceiptRefund","ViewList","Users","Adjustments","CurrencyDollar","DocumentReport","listSubHeader","lineHeight","itemList","paperProps","top","boxShadow","AppSidebar","content","map","item","ListSubheader","subItem","Drawer","anchor","root","AppLayoutRoot","styled","background","default","overflow","AppLayoutWrapper","flex","breakpoints","up","AppLayoutContainer","AppLayoutContent","AppLayout","Hidden","smDown","flexShrink","whiteSpace","StyledLabel","props","bgColor","label","BatchList","data","page","setPage","rowsPerPage","setRowsPerPage","Table","TableHead","TableRow","TableCell","TableBody","slice","index","batchId","branch","clientCount","invoiceCount","value","outstandingAmount","displayType","thousandSeparator","prefix","decimalSeparator","thousandsGroupStyle","decimalScale","fixedDecimalScale","newAmount","totalAmount","batchStatus","TablePagination","rowsPerPageOptions","count","length","newPage","parseInt","target","billingPeriods","description","brandListData","name","channelListData","getBranches","brand","channel","flat","batchListData","period","branchListData","formControl","BatchAndInvoice","setPeriod","Helmet","py","minHeight","Container","maxWidth","Grid","container","xs","startIcon","Card","CardContent","direction","FormControl","InputLabel","htmlFor","Select","native","inputProps","onChange","e","options","selectedIndex","x","filter","clientData","dba","nmls","lei","address","street","city","state","zip","isApproved","isDualApproved","delegatedStatus","nonDelegatedStatus","delegatedApprovedDate","nonDelegatedApprovedDate","division","delegatedAe","nonDelegatedAe","delegatedAr","nonDelegatedAr","delegatedCrm","nonDelegatedCrm","contacts","firstName","lastName","jobTitle","email","mobilePhone","contactType","status","cardHeader","marginTop","marginRight","cardActions","EpdForm","clientId","autoComplete","noValidate","CardHeader","action","Cancel","md","lg","xl","Autocomplete","find","getOptionLabel","option","renderInput","params","TextField","required","select","SelectProps","InputProps","startAdornment","InputAdornment","position","type","defaultValue","multiline","rows","CardActions","Save","EpdList","onEpdEdit","c","loanNumber","srp","adminFee","amountDue","firstPaymentDueDate","adjustmentData","billTypeId","sourceBillTypeId","adjustmentTypeId","adjustmentSubTypeId","comments","createdBy","createdDatetime","modifiedBy","modifiedDatetime","paymentData","paymentTypeId","receivedDate","checkNumber","wireRefNumber","amount","epoData","billingPeriod","submissionDate","purchaseDate","payoffDate","payments","adjustments","EpoForm","epo","reduce","n","Payment","Adjust","adjustmentSubTypeData","adjustmentTypeData","paymentTypeData","Row","row","setOpen","KeyboardArrowUp","KeyboardArrowDown","paymentDate","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","payment","scope","adjustment","EpoList","SearchBox","captions","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","placeholder","OutlinedInput","Search","epdData","netBuyPrice","lossEstimate","loanCurrentStatus","occurenceDate","pairoffData","tradeId","pairoffDate","tradeDate","pairoffAmount","tradeAmount","PairoffList","PairoffForm","FundingAdjustmentList","TaxPenaltyList","billTypeData","shortName","fullName","BillTypeList1","mode","useParams","billtypename","billtypeid","tabValue","getClientId","Tabs","indicatorColor","textColor","Tab","ClientSearchBox","ml","ClientList","BillAmountByMonth","useTheme","datasets","colors","indigo","barPercentage","barThickness","categoryPercentage","maxBarThickness","labels","animation","cornerRadius","layout","legend","maintainAspectRatio","responsive","scales","xAxes","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","paper","bodyFontColor","borderColor","borderWidth","enabled","footerFontColor","intersect","titleFontColor","endIcon","OutstandingBillTypes","red","orange","blue","yellow","common","white","hoverBorderColor","cutoutPercentage","billTypes","textAlign","marginLeft","MoreVertTwoTone","avatar","TotalAdjustmentApplied","AdjustSharp","green","TotalClients","TotalOutstandingAmount","TotalPaymentReceived","Dashboard","sm","ChannelCard","avatarText","subHeader","MoreVert","subheader","formControlRoot","border","formLabel","Fieldset","children","FormLabel","boxRoot","deleteIconButton","FileUpload","fileName","setFileName","accept","hidden","multiple","AttachFile","Delete","CoIssueButtonSet","CommonButtonSet","ImportedDataList","setAnchorEl","Menu","keepMounted","MenuItem","Brand","Channel","BillType","TotalAmount","AmountPending","AmountBilled","AmountClosed","PaymentAdjustment","TableFooter","f","ImportDataForm","importedData","InvoiceList","invoiceId","b","branchId","invoiceListData","ViewInvoice","card","grid","getContrastText","QuickLinkCard","quickLink","media","ActionComponent","actionComponent","quickLinks","ChartBarOutline","client","setClient","navigate","useNavigate","Dialog","DialogTitle","DialogContent","DialogContentText","newValue","DialogActions","setLoanNumber","setTradeId","QuickLinks","NotFound","billtype","ViewAgendaOutlined","PaymentList","PaymentForm","paymentId","setPayment","getBillTypes","AdjustmentList","AdjustmentForm","adjustmentId","setAdjustment","PaymentAdjustmentList","typeid","paId","getBillTypeId","BatchStepper","steps","activeStep","Stepper","step","Step","StepLabel","BatchStepperContentPanel","chips","flexWrap","chip","BranchBillTypeBox","onPeriodChange","branches","onBranchChange","onBillTypeChange","renderValue","Chip","FormGroup","FormControlLabel","control","Checkbox","checked","not","indexOf","intersection","TransferList","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","customList","Paper","dense","role","labelId","currentIndex","newChecked","push","splice","tabIndex","disableRipple","concat","disabled","SuppressClientBillTypeBox","periodDescription","BatchDetailTab","borderStyle","tabs","onTabChange","tab","BatchDetailTabPanel","flexwrap","batchFormData","epd","pairoff","fundingadj","taxpen","invoices","i","actionButtons","BatchForm","selectedBatchData","batch","selectedPeriod","selectedBranches","selectedBillTypes","Object","fromEntries","setActiveStep","setBranches","setBillTypes","setTabValue","getPeriodDescription","getSelectedBranches","getSelectedBillTypes","entries","k","square","d","ArrowBack","prevActiveStep","ArrowForward","Build","General","Contacts","contactDetails","EpoBox","EpdBox","PairoffBox","heading","pxToRem","flexBasis","secondaryHeading","BillTypes","Accordion","expanded","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","PaymentBox","AdjustmentBox","PaymentAdjustments","paymentAdjustmentsData","Invoices","invoiceData","ClientDetail","selectedClientData","routes","element","BillTypeList","createTheme","contrastText","shadows","h1","h2","h3","h4","h5","h6","overline","shape","MuiFormControl","overrides","MuiButton","MuiTableCell","App","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.940ade9c.chunk.js","sourcesContent":["import createStyles from \"@material-ui/styles/createStyles\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    \"@global\": {\r\n      \"*\": {\r\n        boxSizing: \"border-box\",\r\n        margin: 0,\r\n        padding: 0,\r\n      },\r\n      html: {\r\n        \"-webkit-font-smoothing\": \"antialiased\",\r\n        \"-moz-osx-font-smoothing\": \"grayscale\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      body: {\r\n        backgroundColor: \"#f4f6f8\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"#root\": {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","const Logo = () => (\r\n  <img\r\n    alt=\"Back to home\"\r\n    src=\"/app/static/images/MrcooperLogo.png\"\r\n    theme=\"true\"\r\n    logo=\"true\"\r\n    style={{ maxHeight: \"70px\", paddingTop: \"10px\" }}\r\n  />\r\n);\r\n\r\nexport default Logo;\r\n","import {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  Popover,\r\n  Button,\r\n  Divider,\r\n  Avatar,\r\n  ListItemIcon,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Input, NotificationsOutlined } from \"@material-ui/icons\";\r\nimport { User } from \"heroicons-react\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    paddingLeft: theme.spacing(6),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  logoutPopover: {\r\n    width: 180,\r\n    borderRadius: 10,\r\n  },\r\n  alertPopover: {\r\n    width: 280,\r\n    borderRadius: 10,\r\n  },\r\n  alertPopoverItemDivider: {\r\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n  },\r\n  primaryTypographyProps: {\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: 500,\r\n  },\r\n  icon: { minWidth: \"auto\" },\r\n}));\r\n\r\nconst AppNavbar = () => {\r\n  const classes = useStyles();\r\n  const [anchorElLogout, setAnchorElLogout] = React.useState(null);\r\n  const [anchorElAlert, setAnchorElAlert] = React.useState(null);\r\n\r\n  const handleLogoutClick = (event) => {\r\n    setAnchorElLogout(event.currentTarget);\r\n  };\r\n  const handleLogoutClose = () => {\r\n    setAnchorElLogout(null);\r\n  };\r\n\r\n  const handleAlertClick = (event) => {\r\n    setAnchorElAlert(event.currentTarget);\r\n  };\r\n  const handleAlertClose = () => {\r\n    setAnchorElAlert(null);\r\n  };\r\n\r\n  const openLogout = Boolean(anchorElLogout);\r\n  const logoutId = openLogout ? \"simple-popover\" : undefined;\r\n\r\n  const openAlert = Boolean(anchorElAlert);\r\n  const alertId = openAlert ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <AppBar elevation={0}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Typography variant=\"h3\" className={classes.typography}>\r\n          Correspondent Billing System\r\n        </Typography>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <IconButton\r\n          color=\"inherit\"\r\n          size=\"medium\"\r\n          area-describedby={alertId}\r\n          onClick={handleAlertClick}\r\n        >\r\n          <Badge badgeContent={2} color=\"error\">\r\n            <NotificationsOutlined />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          size=\"medium\"\r\n          aria-describedby={logoutId}\r\n          onClick={handleLogoutClick}\r\n        >\r\n          <Input />\r\n        </IconButton>\r\n        <Popover\r\n          id={logoutId}\r\n          open={openLogout}\r\n          anchorEl={anchorElLogout}\r\n          onClose={handleLogoutClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          PaperProps={{ className: classes.logoutPopover }}\r\n        >\r\n          <Box sx={{ p: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                alignItems: \"center\",\r\n                pb: 2,\r\n              }}\r\n            >\r\n              <ListItemIcon className={classes.icon}>\r\n                <User />\r\n              </ListItemIcon>\r\n              <Typography variant=\"subtitle2\" component=\"h6\" align=\"left\">\r\n                Dummy User\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Divider />\r\n          </Box>\r\n\r\n          <Box sx={{ p: 2 }}>\r\n            <Button variant=\"outlined\" size=\"medium\" fullWidth>\r\n              Logout\r\n            </Button>\r\n          </Box>\r\n        </Popover>\r\n        <Popover\r\n          id={alertId}\r\n          open={openAlert}\r\n          anchorEl={anchorElAlert}\r\n          onClose={handleAlertClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n          PaperProps={{ className: classes.alertPopover }}\r\n        >\r\n          <Box sx={{ p: 2, pb: 1 }}>\r\n            <Typography variant=\"h4\">Notifications</Typography>\r\n            <List>\r\n              <ListItem className={classes.alertPopoverItemDivider}>\r\n                <ListItemAvatar>\r\n                  <Avatar></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    className: classes.primaryTypographyProps,\r\n                  }}\r\n                  primary=\"Batch Refresh Required\"\r\n                  secondary=\"Sep 18, 2021\"\r\n                ></ListItemText>\r\n              </ListItem>\r\n              <ListItem className={classes.alertPopoverItemDivider}>\r\n                <ListItemAvatar>\r\n                  <Avatar></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primaryTypographyProps={{\r\n                    className: classes.primaryTypographyProps,\r\n                  }}\r\n                  primary=\"Invoice Due\"\r\n                  secondary=\"Oct 21, 2021\"\r\n                ></ListItemText>\r\n              </ListItem>\r\n            </List>\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", pt: 2 }}>\r\n              <Button variant=\"text\" size=\"small\">\r\n                Mark all as Read\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Popover>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from \"react\";\r\nimport {\r\n  NavLink as RouterLink,\r\n  matchPath,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { ListItem, Button, makeStyles } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    fontWeight: 450,\r\n    fontSize: \"0.88rem\",\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n    color: (s) =>\r\n      s.active ? theme.palette.primary.main : theme.palette.text.secondary,\r\n    \"& svg\": { mr: 1 },\r\n  },\r\n  listItem: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nconst NavItem = ({ href, icon: Icon, title }) => {\r\n  const location = useLocation();\r\n  const active = href\r\n    ? !!matchPath({ path: href, end: false }, location.pathname)\r\n    : false;\r\n\r\n  const classes = useStyles({ active });\r\n\r\n  return (\r\n    <ListItem disableGutters className={classes.listItem}>\r\n      <Button to={href} component={RouterLink} className={classes.button}>\r\n        {Icon && <Icon size=\"20\" />}\r\n        <span style={{ paddingLeft: \"5px\" }}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default NavItem;\r\n","import { Box, Drawer, List, ListSubheader } from \"@material-ui/core\";\r\nimport {\r\n  ChartSquareBar,\r\n  Link,\r\n  Refresh,\r\n  ReceiptRefund,\r\n  Users,\r\n  ViewList,\r\n  CurrencyDollar,\r\n  Adjustments,\r\n  DocumentReport,\r\n} from \"heroicons-react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst items = [\r\n  {\r\n    subHeaderText: \"General\",\r\n    subItems: [\r\n      { title: \"Quick Links\", href: \"/app/links\", icon: Link },\r\n      { title: \"Dashboard\", href: \"/app/dashboard\", icon: ChartSquareBar },\r\n    ],\r\n  },\r\n  {\r\n    subHeaderText: \"Billing\",\r\n    subItems: [\r\n      { title: \"Import Data\", href: \"/app/importdata\", icon: Refresh },\r\n      {\r\n        title: \"Batch & Invoice\",\r\n        href: \"/app/batches\",\r\n        icon: ReceiptRefund,\r\n      },\r\n      { title: \"View Invoices\", href: \"/app/invoices\", icon: ViewList },\r\n    ],\r\n  },\r\n  {\r\n    subHeaderText: \"Management\",\r\n    subItems: [\r\n      { title: \"Clients\", href: \"/app/clients\", icon: Users },\r\n      { title: \"Bill Types\", href: \"/app/billtypes\", icon: Adjustments },\r\n      {\r\n        title: \"Payments & Adjustments\",\r\n        href: \"/app/paymentadjustments\",\r\n        icon: CurrencyDollar,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    subHeaderText: \"Reporting\",\r\n    subItems: [\r\n      { title: \"Report 1\", href: \"\", icon: DocumentReport },\r\n      { title: \"Report 2\", href: \"\", icon: DocumentReport },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listSubHeader: {\r\n    color: theme.palette.text.primary,\r\n    textTransform: \"uppercase\",\r\n    padding: theme.spacing(0),\r\n    lineHeight: 2,\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: 800,\r\n  },\r\n  itemList: {\r\n    padding: theme.spacing(0),\r\n  },\r\n  paperProps: {\r\n    top: \"74px\",\r\n    width: \"256px\",\r\n    height: \"calc(100% - 74px)\",\r\n    boxShadow: \"2px 0 10px 0 rgb(0 0 0 / 13%)\",\r\n  },\r\n}));\r\n\r\nconst AppSidebar = () => {\r\n  const classes = useStyles();\r\n\r\n  const content = (\r\n    <Box sx={{ p: 2 }}>\r\n      {items.map((item) => (\r\n        <List key={item.subHeaderText}>\r\n          <ListSubheader className={classes.listSubHeader}>\r\n            {item.subHeaderText}\r\n          </ListSubheader>\r\n          <List className={classes.itemList}>\r\n            {item.subItems.map((subItem) => (\r\n              <NavItem\r\n                href={subItem.href}\r\n                title={subItem.title}\r\n                icon={subItem.icon}\r\n                key={subItem.title}\r\n              />\r\n            ))}\r\n          </List>\r\n        </List>\r\n      ))}\r\n    </Box>\r\n    // </Box>\r\n  );\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open\r\n      variant=\"persistent\"\r\n      PaperProps={{ classes: { root: classes.paperProps } }}\r\n    >\r\n      {content}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport AppNavbar from \"./AppNavbar\";\r\nimport AppSidebar from \"./AppSidebar\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst AppLayoutRoot = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  display: \"flex\",\r\n  height: \"100%\",\r\n  overflow: \"hidden\",\r\n  width: \"100%\",\r\n}));\r\n\r\nconst AppLayoutWrapper = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  flex: \"1 1 auto\",\r\n  overflow: \"hidden\",\r\n  paddingTop: 72,\r\n  [theme.breakpoints.up(\"lg\")]: {\r\n    paddingLeft: 256,\r\n  },\r\n}));\r\n\r\nconst AppLayoutContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  flex: \"1 1 auto\",\r\n  overflow: \"hidden\",\r\n});\r\n\r\nconst AppLayoutContent = styled(\"div\")({\r\n  flex: \"1 1 auto\",\r\n  height: \"100%\",\r\n  overflow: \"auto\",\r\n});\r\n\r\nconst AppLayout = () => {\r\n  return (\r\n    <AppLayoutRoot>\r\n      <AppNavbar />\r\n      <Hidden smDown>\r\n        <AppSidebar />\r\n      </Hidden>\r\n\r\n      <AppLayoutWrapper>\r\n        <AppLayoutContainer>\r\n          <AppLayoutContent>\r\n            <Outlet />\r\n          </AppLayoutContent>\r\n        </AppLayoutContainer>\r\n      </AppLayoutWrapper>\r\n    </AppLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default AppLayout;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"inline-flex\",\r\n    borderRadius: 16,\r\n    alignItems: \"center\",\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    fontSize: \"0.6875rem\",\r\n    letterSpacing: \"0.5px\",\r\n    textTransform: \"uppercase\",\r\n    width: \"100px\",\r\n    whiteSpace: \"nowrap\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst StyledLabel = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <span className={classes.root} style={{ backgroundColor: props.bgColor }}>\r\n      {props.label}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StyledLabel;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\n\r\nconst BatchList = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"right\">#</TableCell>\r\n            <TableCell align=\"center\">Batch ID</TableCell>\r\n            <TableCell align=\"center\">Branch</TableCell>\r\n            <TableCell align=\"right\">No of. Client</TableCell>\r\n            <TableCell align=\"right\">No of. Invoice</TableCell>\r\n            <TableCell align=\"right\">Outstanding Amount</TableCell>\r\n            <TableCell align=\"right\">New Amount</TableCell>\r\n            <TableCell align=\"right\">Total Amount</TableCell>\r\n            <TableCell align=\"center\">Batch Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={index + 1}>\r\n                <TableCell align=\"right\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">{item.batchId}</TableCell>\r\n                <TableCell align=\"center\">{item.branch}</TableCell>\r\n                <TableCell align=\"right\">{item.clientCount}</TableCell>\r\n                <TableCell align=\"right\">{item.invoiceCount}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.outstandingAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.newAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.totalAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <StyledLabel\r\n                    label={item.batchStatus}\r\n                    bgColor={\r\n                      item.batchStatus === \"Pending\"\r\n                        ? \"rgb(255, 152, 0)\"\r\n                        : \"rgb(76, 175, 80)\"\r\n                    }\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    href={`/app/batches/${item.batchId}/edit`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BatchList;\r\n","const billingPeriods = [\r\n  { value: \"\", description: \"\" },\r\n  { value: \"202108\", description: \"August 2021\" },\r\n  { value: \"202109\", description: \"September 2021\" },\r\n  { value: \"202110\", description: \"October 2021\" },\r\n  { value: \"202111\", description: \"November 2021\" },\r\n];\r\n\r\nexport default billingPeriods;\r\n","const brandListData = [{ id: 1, name: \"MRC\" }];\r\n\r\nexport default brandListData;\r\n","const channelListData = [\r\n  { id: 1, name: \"Delegated\" },\r\n  { id: 2, name: \"Non-Delegated\" },\r\n  { id: 3, name: \"Co-Issue\" },\r\n];\r\n\r\nexport default channelListData;\r\n","import brandListData from \"./brandListData\";\r\nimport channelListData from \"./channelListData\";\r\n\r\nconst getBranches = () => {\r\n  return brandListData.map((brand) => {\r\n    return channelListData.map((channel, index) => ({\r\n      id: index + 1,\r\n      name: brand.name + \" \" + channel.name,\r\n    }));\r\n  });\r\n};\r\n\r\nexport default getBranches().flat(1);\r\n","import branchListData from \"../__mocks__/branchListData\";\r\n\r\nconst batchListData = [\r\n  {\r\n    batchId: 1001,\r\n    period: 202108,\r\n    branch: branchListData[0].name,\r\n    clientCount: 5,\r\n    invoiceCount: 5,\r\n    outstandingAmount: 100000,\r\n    newAmount: 40000,\r\n    totalAmount: 104000,\r\n    batchStatus: \"Pending\",\r\n  },\r\n  {\r\n    period: 202108,\r\n    batchId: 1002,\r\n    branch: branchListData[1].name,\r\n    clientCount: 10,\r\n    invoiceCount: 11,\r\n    outstandingAmount: 5000,\r\n    newAmount: 5000,\r\n    totalAmount: 10000,\r\n    batchStatus: \"Billed\",\r\n  },\r\n  {\r\n    period: 202108,\r\n    batchId: 1003,\r\n    branch: branchListData[2].name,\r\n    clientCount: 4,\r\n    invoiceCount: 5,\r\n    outstandingAmount: 100000,\r\n    newAmount: 40000,\r\n    totalAmount: 104000,\r\n    batchStatus: \"Pending\",\r\n  },\r\n  {\r\n    period: 202108,\r\n    batchId: 1005,\r\n    branch:\r\n      branchListData[0].name +\r\n      \" / \" +\r\n      branchListData[1].name +\r\n      \" / \" +\r\n      branchListData[2].name,\r\n    clientCount: 12,\r\n    invoiceCount: 11,\r\n    outstandingAmount: 545983,\r\n    newAmount: 122343,\r\n    totalAmount: 232390,\r\n    batchStatus: \"Pending\",\r\n  },\r\n\r\n  {\r\n    batchId: 1006,\r\n    period: 202109,\r\n    branch: branchListData[0].name,\r\n    clientCount: 5,\r\n    invoiceCount: 5,\r\n    outstandingAmount: 100000,\r\n    newAmount: 40000,\r\n    totalAmount: 104000,\r\n    batchStatus: \"Pending\",\r\n  },\r\n  {\r\n    period: 202109,\r\n    batchId: 1007,\r\n    branch: branchListData[1].name,\r\n    clientCount: 10,\r\n    invoiceCount: 11,\r\n    outstandingAmount: 5000,\r\n    newAmount: 5000,\r\n    totalAmount: 10000,\r\n    batchStatus: \"Billed\",\r\n  },\r\n];\r\n\r\nexport default batchListData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { ReceiptRefundOutline } from \"heroicons-react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport BatchList from \"../components/batchAndInvoice/BatchList\";\r\nimport billingPeriods from \"../__mocks__/billingPeriods\";\r\nimport batchListData from \"../__mocks__/batchListData\";\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    width: \"300px\",\r\n  },\r\n});\r\n\r\nconst BatchAndInvoice = () => {\r\n  const classes = useStyles();\r\n  const [period, setPeriod] = useState({\r\n    value: billingPeriods[1].value,\r\n    description: billingPeriods[1].description,\r\n  });\r\n\r\n  const handlePeriodChange = (e) => {\r\n    setPeriod({\r\n      value: e.target.value,\r\n      description: e.target.options[e.target.options.selectedIndex].text,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Billing: Batch List</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid container item xs={12} justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Typography variant=\"h2\">\r\n                  Batch List {billingPeriods[0].description}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"contained\"\r\n                  href=\"/app/batches/new\"\r\n                  startIcon={<ReceiptRefundOutline />}\r\n                >\r\n                  Create new Batch\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Grid container spacing={2} direction=\"column\">\r\n                    <Grid item>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"flex-start\"\r\n                        spacing={4}\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <Grid item>\r\n                          <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControl}\r\n                          >\r\n                            <InputLabel htmlFor=\"period\">\r\n                              Choose Period\r\n                            </InputLabel>\r\n                            <Select\r\n                              native\r\n                              label=\"Choose Period\"\r\n                              inputProps={{\r\n                                name: \"period\",\r\n                                id: \"period\",\r\n                              }}\r\n                              value={period.value}\r\n                              onChange={handlePeriodChange}\r\n                            >\r\n                              {billingPeriods.map((x) => (\r\n                                <option value={x.value} key={x.value}>\r\n                                  {x.description}\r\n                                </option>\r\n                              ))}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<CloseIcon />}\r\n                          >\r\n                            Close Billing Period\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <BatchList\r\n                        data={batchListData.filter(\r\n                          (x) => x.period == period.value\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BatchAndInvoice;\r\n","const clientData = [\r\n  {\r\n    id: 1,\r\n    name: \"ANCHOR FUNDING, INC.\",\r\n    dba: \"ANCHOR FUNDING, INC.\",\r\n    nmls: \"343434\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"IXONIA BANK\",\r\n    dba: \"IXONIA BANK\",\r\n    nmls: \"348970\",\r\n    lei: \"\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"No\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"InActive\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"\",\r\n    division: \"NORTHEAST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"FIRST FEDERAL SAVINGS AND LOAN ASSOCIATION OF LAKEWOOD\",\r\n    dba: \"FIRST FEDERAL SAVINGS AND LOAN ASSOCIATION OF LAKEWOOD\",\r\n    nmls: \"698999\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"No\",\r\n    delegatedStatus: \"Inactive\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"S&S FINANCIAL\",\r\n    dba: \"S&S FINANCIAL\",\r\n    nmls: \"7670900\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"CONSUMER REAL ESTATE FINANCE CO.\",\r\n    dba: \"CONSUMER REAL ESTATE FINANCE CO.\",\r\n    nmls: \"3123123\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"M SQUARED FINANCIAL LLC\",\r\n    dba: \"M SQUARED FINANCIAL LLC\",\r\n    nmls: \"767565\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"ARCUS LENDING INC\",\r\n    dba: \"ARCUS LENDING INC\",\r\n    nmls: \"609899\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"CAPITAL BANK, N.A.\",\r\n    dba: \"CAPITAL BANK, N.A.\",\r\n    nmls: \"348990\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"O1NE MORTGAGE INC\",\r\n    dba: \"O1NE MORTGAGE INC\",\r\n    nmls: \"127516\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"SUMMIT MORTGAGE CORPORATION-NMLS 1041\",\r\n    dba: \"SUMMIT MORTGAGE CORPORATION-NMLS 1041\",\r\n    nmls: \"456808\",\r\n    lei: \"324762478sjdfgsfgshgsdfjh\",\r\n    address: {\r\n      street: \"1945 N. Elston Ave.\",\r\n      city: \"Chicago\",\r\n      state: \"IL\",\r\n      zip: \"60642\",\r\n    },\r\n    isApproved: \"Yes\",\r\n    isDualApproved: \"Yes\",\r\n    delegatedStatus: \"Active\",\r\n    nonDelegatedStatus: \"Active\",\r\n    delegatedApprovedDate: \"10/11/2019\",\r\n    nonDelegatedApprovedDate: \"12/31/2017\",\r\n    division: \"MIDWEST\",\r\n    delegatedAe: \"Amy Collett\",\r\n    nonDelegatedAe: \"Amy Collett\",\r\n    delegatedAr: \"Nancy Considine\",\r\n    nonDelegatedAr: \"Nancy Considine\",\r\n    delegatedCrm: \"Nathan Wehrheim\",\r\n    nonDelegatedCrm: \"Valerie Grace\",\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        firstName: \"Cathy\",\r\n        lastName: \"Hernandez\",\r\n        jobTitle: \"Closing Manager\",\r\n        email: \"cathyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Cindy\",\r\n        lastName: \"Hesslau\",\r\n        jobTitle: \"Underwriting Manager\",\r\n        email: \"cindyh@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Cap Market Contact\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Danielle\",\r\n        lastName: \"Brosman\",\r\n        jobTitle: \"-\",\r\n        email: \"dveltri@anmtg.com\",\r\n        mobilePhone: \"7733055626\",\r\n        contactType: \"Other\",\r\n      },\r\n    ],\r\n    status: \"Active\",\r\n  },\r\n];\r\n\r\nexport default clientData;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport brandListData from \"../../__mocks__/brandListData\";\r\nimport channelListData from \"../../__mocks__/channelListData\";\r\nimport { Cancel, Save } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    \"& .MuiCardHeader-action\": {\r\n      marginTop: theme.spacing(0),\r\n      marginRight: theme.spacing(0),\r\n    },\r\n  },\r\n  cardActions: {\r\n    padding: theme.spacing(2),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst EpdForm = ({ clientId }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <form autoComplete=\"off\" noValidate>\r\n      <Container maxWidth=\"lg\">\r\n        <Card>\r\n          <CardHeader\r\n            className={classes.cardHeader}\r\n            title=\"Add new EPD\"\r\n            action={\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                startIcon={<Cancel />}\r\n                href=\"/app/billtypes/epd\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            }\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <Autocomplete\r\n                  options={clientData}\r\n                  value={clientData.find((x) => x.id === clientId)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Client\" variant=\"outlined\" />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Brand\"\r\n                  name=\"brand\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {brandListData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Channel\"\r\n                  name=\"channel\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {channelListData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Loan Number\"\r\n                  name=\"loannumber\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">#</InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"SRP ($)\"\r\n                  name=\"srp\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Net Buy Price ($)\"\r\n                  name=\"netbuyprice\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Loss Estimate ($)\"\r\n                  name=\"lossestimate\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Admin Fee ($)\"\r\n                  name=\"adminfee\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Amount Due\"\r\n                  name=\"amountdue\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"First Payment Due Date\"\r\n                  defaultValue=\"2021-10-15\"\r\n                  name=\"firstpaymentduedate\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Occurrence Date\"\r\n                  defaultValue=\"2021-10-21\"\r\n                  name=\"occurrencedate\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Comments\"\r\n                  name=\"comments\"\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Status\"\r\n                  name=\"status\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"Pending\">Billed</option>\r\n                  <option value=\"Pending\">Closed</option>\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardActions}>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<Save />}>\r\n              Save\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EpdForm;\r\n","import {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport { useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\n\r\nconst EpdList = ({ data, onEpdEdit }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">EPD Id</TableCell>\r\n            <TableCell align=\"center\">Client</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"right\">SRP</TableCell>\r\n            <TableCell align=\"right\">Admin Fee</TableCell>\r\n            <TableCell align=\"right\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">First Payment Due Date</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={index + 1}>\r\n                <TableCell align=\"center\">{item.id}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {clientData.find((c) => c.id === item.clientId).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.loanNumber}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.srp}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.adminFee}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.amountDue}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.firstPaymentDueDate}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <StyledLabel\r\n                    label={item.status}\r\n                    bgColor={\r\n                      item.status === \"Pending\"\r\n                        ? \"rgb(255, 152, 0)\"\r\n                        : \"rgb(76, 175, 80)\"\r\n                    }\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    href={`/app/billtypes/epd/${item.id}/edit`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpdList;\r\n","const adjustmentData = [\r\n  {\r\n    id: 1,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 1,\r\n    adjustmentTypeId: 1,\r\n    adjustmentSubTypeId: 1,\r\n    status: \"Pending\",\r\n    amountDue: 709.1,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 2,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 1,\r\n    adjustmentTypeId: 1,\r\n    adjustmentSubTypeId: 1,\r\n    status: \"Pending\",\r\n    amountDue: 251.5,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 3,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 2,\r\n    adjustmentTypeId: 1,\r\n    adjustmentSubTypeId: 1,\r\n    status: \"Pending\",\r\n    amountDue: 3043.2,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 4,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 3,\r\n    adjustmentTypeId: 1,\r\n    adjustmentSubTypeId: 1,\r\n    status: \"Pending\",\r\n    amountDue: 550.12,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n];\r\n\r\nexport default adjustmentData;\r\n","const paymentData = [\r\n  {\r\n    id: 1,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 1,\r\n    paymentTypeId: 1,\r\n    receivedDate: \"08/02/2021\",\r\n    status: \"Pending\",\r\n    checkNumber: \"\",\r\n    wireRefNumber: \"TRN# 121140393846094\",\r\n    amount: 4904.02,\r\n    comments: \"Updated by the System\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 2,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 1,\r\n    paymentTypeId: 2,\r\n    receivedDate: \"08/10/2021\",\r\n    status: \"Pending\",\r\n    checkNumber: \"\",\r\n    wireRefNumber: \"TRN# 99999999\",\r\n    amount: 7001.05,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 3,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 2,\r\n    paymentTypeId: 1,\r\n    receivedDate: \"08/02/2021\",\r\n    status: \"Pending\",\r\n    checkNumber: \"\",\r\n    wireRefNumber: \"TRN# 8888888\",\r\n    amount: 1204.08,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 4,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 2,\r\n    paymentTypeId: 2,\r\n    receivedDate: \"08/20/2021\",\r\n    status: \"Pending\",\r\n    checkNumber: \"\",\r\n    wireRefNumber: \"TRN# 4444444\",\r\n    amount: 1560.02,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 5,\r\n    billTypeId: 1,\r\n    sourceBillTypeId: 3,\r\n    paymentTypeId: 2,\r\n    receivedDate: \"08/31/2021\",\r\n    status: \"Pending\",\r\n    checkNumber: \"\",\r\n    wireRefNumber: \"TRN# 4444444\",\r\n    amount: 501.01,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 6,\r\n    billTypeId: 2,\r\n    sourceBillTypeId: 1,\r\n    paymentTypeId: 2,\r\n    receivedDate: \"08/31/2021\",\r\n    status: \"Pending\",\r\n    checkNumber: \"\",\r\n    wireRefNumber: \"TRN# 34583478\",\r\n    amount: 829.01,\r\n    comments: \"\",\r\n    createdBy: \"Connie Husdon\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n];\r\n\r\nexport default paymentData;\r\n","import adjustmentData from \"./adjustmentData/adjustmentData\";\r\nimport paymentData from \"./paymentData/paymentData\";\r\n\r\nconst epoData = [\r\n  {\r\n    id: 1,\r\n    clientId: 1,\r\n    billTypeId: 1,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    loanNumber: \"1100138990\",\r\n    submissionDate: \"11/20/2021\",\r\n    purchaseDate: \"10/19/2021\",\r\n    amountDue: 31030,\r\n    payoffDate: \"12/10/2021\",\r\n    status: \"Pending\",\r\n    comments: \"\",\r\n    createdBy: \"\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n    payments: paymentData.filter(\r\n      (x) => x.sourceBillTypeId === 1 && x.billTypeId === 1\r\n    ),\r\n    adjustments: adjustmentData.filter(\r\n      (x) => x.sourceBillTypeId === 1 && x.billTypeId === 1\r\n    ),\r\n  },\r\n  {\r\n    id: 2,\r\n    clientId: 1,\r\n    billTypeId: 1,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    loanNumber: \"1101749032\",\r\n    submissionDate: \"\",\r\n    purchaseDate: \"06/08/2021\",\r\n    amountDue: 5960.94,\r\n    payoffDate: \"09/01/2021\",\r\n    status: \"Billed\",\r\n    comments: \"\",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"09/13/2021 11:33 AM\",\r\n    modifiedBy: \"CBS Automation\",\r\n    modifiedDatetime: \"09/13/2021 11:33 AM\",\r\n    payments: paymentData.filter(\r\n      (x) => x.sourceBillTypeId === 2 && x.billTypeId === 1\r\n    ),\r\n    adjustments: adjustmentData.filter(\r\n      (x) => x.sourceBillTypeId === 2 && x.billTypeId === 1\r\n    ),\r\n  },\r\n  {\r\n    id: 3,\r\n    clientId: 1,\r\n    billTypeId: 1,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    loanNumber: \"1101369690\",\r\n    submissionDate: \"\",\r\n    purchaseDate: \"03/15/2021\",\r\n    amountDue: 4790.13,\r\n    payoffDate: \"05/28/2021\",\r\n    status: \"Closed\",\r\n    comments: \" (Closed by Payment_ID:14382)\",\r\n    createdBy: \"Connie Hudson\",\r\n    createdDatetime: \"09/13/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/13/2021 11:33 AM\",\r\n    payments: paymentData.filter(\r\n      (x) => x.sourceBillTypeId === 3 && x.billTypeId === 1\r\n    ),\r\n    adjustments: adjustmentData.filter(\r\n      (x) => x.sourceBillTypeId === 3 && x.billTypeId === 1\r\n    ),\r\n  },\r\n];\r\n\r\nexport default epoData;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport brandListData from \"../../__mocks__/brandListData\";\r\nimport channelListData from \"../../__mocks__/channelListData\";\r\nimport { Adjust, Cancel, Payment, Save } from \"@material-ui/icons\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    \"& .MuiCardHeader-action\": {\r\n      marginTop: theme.spacing(0),\r\n      marginRight: theme.spacing(0),\r\n    },\r\n  },\r\n  cardActions: {\r\n    padding: theme.spacing(2),\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst EpoForm = ({ clientId, billTypeId }) => {\r\n  const classes = useStyles();\r\n\r\n  let epo = epoData.find((x) => x.id === billTypeId) || {\r\n    id: undefined,\r\n    clientId: undefined,\r\n    billTypeId: undefined,\r\n    billingPeriod: undefined,\r\n    channel: undefined,\r\n    brand: undefined,\r\n    loanNumber: undefined,\r\n    submissionDate: undefined,\r\n    purchaseDate: undefined,\r\n    payoffDate: undefined,\r\n    amountDue: undefined,\r\n  };\r\n  let amountDue = 0;\r\n  if (billTypeId > 0) {\r\n    amountDue =\r\n      epo.amountDue -\r\n      epo.payments.reduce((p, n) => p + n.amount, 0) -\r\n      epo.adjustments.reduce((p, n) => p + n.amountDue, 0);\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate>\r\n      <Container maxWidth=\"lg\">\r\n        <Card>\r\n          <CardHeader\r\n            className={classes.cardHeader}\r\n            title={epo.id ? `Edit EPO Id: ${epo.id}` : \"Add new EPO\"}\r\n            action={\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                startIcon={<Cancel />}\r\n                href={`/app/billtypes/epo`}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            }\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <Autocomplete\r\n                  options={clientData}\r\n                  value={clientData.find((x) => x.id === clientId)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Client\" variant=\"outlined\" />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Brand\"\r\n                  name=\"brand\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={epo.brand}\r\n                >\r\n                  {brandListData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Channel\"\r\n                  name=\"channel\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={epo.channel}\r\n                >\r\n                  {channelListData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Loan Number\"\r\n                  name=\"loannumber\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">#</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  value={epo.loanNumber}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Submission Date\"\r\n                  name=\"submissiondate\"\r\n                  defaultValue=\"2021-11-01\"\r\n                  variant=\"outlined\"\r\n                  value={epo.submissionDate}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Purchase Date\"\r\n                  name=\"purchasedate\"\r\n                  defaultValue=\"2021-10-11\"\r\n                  variant=\"outlined\"\r\n                  value={epo.purchaseDate}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Payoff Date\"\r\n                  name=\"payoffdate\"\r\n                  defaultValue=\"2021-10-11\"\r\n                  variant=\"outlined\"\r\n                  value={epo.payoffDate}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Amount Due\"\r\n                  name=\"amountdue\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={epo.amountDue}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Comments\"\r\n                  name=\"comments\"\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                  value={epo.comments}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Status\"\r\n                  name=\"status\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={epo.status}\r\n                >\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"Pending\">Billed</option>\r\n                  <option value=\"Pending\">Closed</option>\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardActions}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {epo ? (\r\n                <>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color={amountDue > 0 ? \"error\" : \"primary\"}\r\n                    style={{ marginRight: \"16px\" }}\r\n                  >\r\n                    Balance Amount:{\" \"}\r\n                    <NumberFormat\r\n                      value={amountDue}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                      decimalSeparator=\".\"\r\n                      thousandsGroupStyle=\"thousand\"\r\n                      decimalScale={2}\r\n                      fixedDecimalScale={true}\r\n                    />\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    startIcon={<Payment />}\r\n                    style={{ marginRight: \"16px\" }}\r\n                  >\r\n                    Make a Payment\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    startIcon={<Adjust />}\r\n                  >\r\n                    Make an Adjustment\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </Box>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EpoForm;\r\n","const adjustmentSubTypeData = [\r\n  { id: 1, name: \"Borrower Property Sale\" },\r\n  { id: 2, name: \"New Lender 4-12\" },\r\n  { id: 3, name: \"Payoff > 12 months\" },\r\n  { id: 4, name: \"Payoff > 180 days\" },\r\n  { id: 5, name: \"EPD - VA\" },\r\n  { id: 6, name: \"Servicing Error\" },\r\n  { id: 7, name: \"Other\" },\r\n  { id: 8, name: \"Non-recoverable\" },\r\n  { id: 8, name: \"Refer to legal\" },\r\n];\r\n\r\nexport default adjustmentSubTypeData;\r\n","const adjustmentTypeData = [\r\n  { id: 1, name: \"Applied Credit To Outstanding Claim\" },\r\n  { id: 2, name: \"Channel Waiver\" },\r\n  { id: 3, name: \"Corporate Waiver\" },\r\n  { id: 4, name: \"Negotiation\" },\r\n  { id: 5, name: \"Other\" },\r\n  { id: 6, name: \"Refund To Correspondent\" },\r\n  { id: 7, name: \"Rescission\" },\r\n  { id: 8, name: \"Write off\" },\r\n];\r\n\r\nexport default adjustmentTypeData;\r\n","const paymentTypeData = [\r\n  { id: 1, name: \"Wire\" },\r\n  { id: 2, name: \"Check\" },\r\n  { id: 3, name: \"Net Funds\" },\r\n];\r\n\r\nexport default paymentTypeData;\r\n","import {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from \"@material-ui/icons\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport { useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport adjustmentSubTypeData from \"../../__mocks__/adjustmentSubTypeData\";\r\nimport adjustmentTypeData from \"../../__mocks__/adjustmentTypeData\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport paymentTypeData from \"../../__mocks__/paymentTypeData\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\n\r\nconst Row = ({ row, index }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <TableRow key={index + 1}>\r\n        <TableCell align=\"center\">{row.id}</TableCell>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {clientData.find((c) => c.id === row.clientId).name}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.loanNumber}</TableCell>\r\n        <TableCell align=\"center\">{row.submissionDate}</TableCell>\r\n        <TableCell align=\"center\">{row.paymentDate}</TableCell>\r\n        <TableCell align=\"right\">\r\n          <NumberFormat\r\n            value={row.amountDue}\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            prefix={\"$\"}\r\n            decimalSeparator=\".\"\r\n            thousandsGroupStyle=\"thousand\"\r\n            decimalScale={2}\r\n            fixedDecimalScale={true}\r\n          />\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <StyledLabel\r\n            label={row.status}\r\n            bgColor={\r\n              row.status === \"Pending\" ? \"rgb(255, 152, 0)\" : \"rgb(76, 175, 80)\"\r\n            }\r\n          />\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <IconButton size=\"medium\" href={`/app/billtypes/epo/${row.id}/edit`}>\r\n            <Pencil size=\"20\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Payments\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"payments\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Received Date</TableCell>\r\n                    <TableCell>Check #</TableCell>\r\n                    <TableCell>Payment Type</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.payments.map((payment) => (\r\n                    <TableRow key={payment.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {payment.receivedDate}\r\n                      </TableCell>\r\n                      <TableCell>{payment.checkNumber}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          paymentTypeData.find(\r\n                            (x) => x.id === payment.paymentTypeId\r\n                          ).name\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <NumberFormat\r\n                          value={payment.amount}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"$\"}\r\n                          decimalSeparator=\".\"\r\n                          thousandsGroupStyle=\"thousand\"\r\n                          decimalScale={2}\r\n                          fixedDecimalScale={true}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Adjustments\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"payments\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Adjustment Type</TableCell>\r\n                    <TableCell>Adjustment Sub Type</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Amount Due</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.adjustments.map((adjustment) => (\r\n                    <TableRow key={adjustment.id}>\r\n                      <TableCell>\r\n                        {\r\n                          adjustmentTypeData.find(\r\n                            (x) => x.id === adjustment.adjustmentTypeId\r\n                          ).name\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          adjustmentSubTypeData.find(\r\n                            (x) => x.id === adjustment.adjustmentSubTypeId\r\n                          ).name\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>{adjustment.status}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <NumberFormat\r\n                          value={adjustment.amountDue}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"$\"}\r\n                          decimalSeparator=\".\"\r\n                          thousandsGroupStyle=\"thousand\"\r\n                          decimalScale={2}\r\n                          fixedDecimalScale={true}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EpoList = ({ data }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">EPO Id</TableCell>\r\n            <TableCell />\r\n            <TableCell align=\"center\">Client</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Submission Date</TableCell>\r\n            <TableCell align=\"center\">Payment Date</TableCell>\r\n            <TableCell align=\"right\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <Row key={item.id} row={item} index={index} />\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpoList;\r\n","import {\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\n\r\nconst SearchBox = ({ captions }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item>\r\n        <Autocomplete\r\n          selectOnFocus\r\n          clearOnBlur\r\n          handleHomeEndKeys\r\n          renderOption={(option) => option.name}\r\n          options={clientData}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n              placeholder=\"Search by Client\"\r\n              variant=\"outlined\"\r\n              {...params}\r\n            />\r\n          )}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <OutlinedInput\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            }\r\n            placeholder=\"Search by Trade Id/Loan #\"\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl variant=\"outlined\" style={{ width: \"175px\" }}>\r\n          <InputLabel htmlFor=\"sortby\">Search By Status</InputLabel>\r\n          <Select native label=\"Search by Status\">\r\n            <option value=\"\"></option>\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"Billed\">Billed</option>\r\n            <option value=\"Closed\">Closed</option>\r\n            ))\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","const epdData = [\r\n  {\r\n    id: 1,\r\n    clientId: 1,\r\n    billTypeId: 2,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    loanNumber: \"1100122876\",\r\n    srp: 4238.4,\r\n    netBuyPrice: 0,\r\n    lossEstimate: 0,\r\n    adminFee: 3000,\r\n    amountDue: 7238.4,\r\n    loanCurrentStatus: \"PRE30\",\r\n    firstPaymentDueDate: \"05/01/2020\",\r\n    occurenceDate: \"08/01/2020\",\r\n    status: \"Pending\",\r\n    comments: \" (Closed by Payment_ID:12678)\",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"CBS Automation\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 2,\r\n    clientId: 1,\r\n    billTypeId: 2,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    loanNumber: \"1101742458\",\r\n    srp: 6646.08,\r\n    netBuyPrice: 11847.23,\r\n    lossEstimate: 0,\r\n    adminFee: 0,\r\n    amountDue: 7646.08,\r\n    loanCurrentStatus: \"60\",\r\n    firstPaymentDueDate: \"07/01/2021\",\r\n    occurenceDate: \"08/01/2021\",\r\n    status: \"Pending\",\r\n    comments: \"\",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"10/13/2021 11:33 AM\",\r\n    modifiedBy: \"CBS Automation\",\r\n    modifiedDatetime: \"10/13/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 3,\r\n    clientId: 1,\r\n    billTypeId: 2,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    loanNumber: \"1101358180\",\r\n    srp: 4572.57,\r\n    netBuyPrice: 3851.97,\r\n    lossEstimate: 0,\r\n    adminFee: 1000.0,\r\n    amountDue: 5572.57,\r\n    loanCurrentStatus: \"60\",\r\n    firstPaymentDueDate: \"05/01/2020\",\r\n    occurenceDate: \"05/01/2021\",\r\n    status: \"Billed\",\r\n    comments: \" \",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"07/16/2021 11:33 AM\",\r\n    modifiedBy: \"CBS Automation\",\r\n    modifiedDatetime: \"07/16/2021 11:33 AM\",\r\n  },\r\n];\r\n\r\nexport default epdData;\r\n","const pairoffData = [\r\n  {\r\n    id: 1,\r\n    clientId: 1,\r\n    billTypeId: 3,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    tradeId: \"28097\",\r\n    pairoffDate: \"08/12/2021\",\r\n    tradeDate: \"05/14/2021\",\r\n    pairoffAmount: 199562.1,\r\n    tradeAmount: 404145.0,\r\n    amountDue: 168.38,\r\n    status: \"Pending\",\r\n    comments: \"\",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"CBS Automation\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 2,\r\n    clientId: 1,\r\n    billTypeId: 3,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    tradeId: \"24965\",\r\n    pairoffDate: \"06/01/2021\",\r\n    tradeDate: \"03/26/2021\",\r\n    pairoffAmount: 164287.44,\r\n    tradeAmount: 7985928.0,\r\n    amountDue: 1078.14,\r\n    status: \"Billed\",\r\n    comments: \"\",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"CBS Automation\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n  {\r\n    id: 3,\r\n    clientId: 1,\r\n    billTypeId: 3,\r\n    billingPeriod: \"202108\",\r\n    channel: 1,\r\n    brand: 1,\r\n    tradeId: \"22640\",\r\n    pairoffDate: \"05/26/2021\",\r\n    tradeDate: \"02/23/2021\",\r\n    pairoffAmount: 137744.68,\r\n    tradeAmount: 12983566.0,\r\n    amountDue: 246.91,\r\n    status: \"Closed\",\r\n    comments: \" (Closed by Payment_ID:14390)\",\r\n    createdBy: \"CBS Automation\",\r\n    createdDatetime: \"09/10/2021 11:33 AM\",\r\n    modifiedBy: \"Connie Hudson\",\r\n    modifiedDatetime: \"09/10/2021 11:33 AM\",\r\n  },\r\n];\r\n\r\nexport default pairoffData;\r\n","import {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport { useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\n\r\nconst PairoffList = ({ data }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Pairoff Id</TableCell>\r\n            <TableCell align=\"center\">Client</TableCell>\r\n            <TableCell align=\"center\">Trade Id</TableCell>\r\n            <TableCell align=\"center\">Pairoff Date</TableCell>\r\n            <TableCell align=\"center\">Trade Date</TableCell>\r\n            <TableCell align=\"right\">Pairoff Amount</TableCell>\r\n            <TableCell align=\"right\">Trade Amount</TableCell>\r\n            <TableCell align=\"right\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={index + 1}>\r\n                <TableCell align=\"center\">{item.id}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {clientData.find((c) => c.id === item.clientId).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.tradeId}</TableCell>\r\n                <TableCell align=\"center\">{item.pairoffDate}</TableCell>\r\n                <TableCell align=\"center\">{item.tradeDate}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.pairoffAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.tradeAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.amountDue}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <StyledLabel\r\n                    label={item.status}\r\n                    bgColor={\r\n                      item.status === \"Pending\"\r\n                        ? \"rgb(255, 152, 0)\"\r\n                        : \"rgb(76, 175, 80)\"\r\n                    }\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    href={`/app/billtypes/pairoff/${item.id}/edit`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PairoffList;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport brandListData from \"../../__mocks__/brandListData\";\r\nimport channelListData from \"../../__mocks__/channelListData\";\r\nimport { Cancel, Save } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    \"& .MuiCardHeader-action\": {\r\n      marginTop: theme.spacing(0),\r\n      marginRight: theme.spacing(0),\r\n    },\r\n  },\r\n  cardActions: {\r\n    padding: theme.spacing(2),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst PairoffForm = ({ clientId }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <form autoComplete=\"off\" noValidate>\r\n      <Container maxWidth=\"lg\">\r\n        <Card>\r\n          <CardHeader\r\n            className={classes.cardHeader}\r\n            title=\"Add new Pairoff\"\r\n            action={\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                startIcon={<Cancel />}\r\n                href=\"/app/billtypes/pairoff\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            }\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <Autocomplete\r\n                  options={clientData}\r\n                  value={clientData.find((x) => x.id === clientId)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Client\" variant=\"outlined\" />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Brand\"\r\n                  name=\"brand\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {brandListData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Channel\"\r\n                  name=\"channel\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {channelListData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Trade Id\"\r\n                  name=\"tradeid\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">#</InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Pairoff Date\"\r\n                  defaultValue=\"2021-10-15\"\r\n                  name=\"pairoffdate\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Trade Date\"\r\n                  defaultValue=\"2021-10-15\"\r\n                  name=\"tradedate\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Pairoff Amount ($)\"\r\n                  name=\"pairoffamount\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Trade Amount ($)\"\r\n                  name=\"tradeamount\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Amount Due\"\r\n                  name=\"amountdue\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Comments\"\r\n                  name=\"comments\"\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Status\"\r\n                  name=\"status\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"Pending\">Billed</option>\r\n                  <option value=\"Pending\">Closed</option>\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardActions}>\r\n            <Button variant=\"contained\" color=\"secondary\" startIcon={<Save />}>\r\n              Save\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PairoffForm;\r\n","import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst FundingAdjustmentList = () => {\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Fund Adj Id</TableCell>\r\n            <TableCell align=\"center\">Client</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"right\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={6}>\r\n              <Typography variant=\"h4\" color=\"textSecondary\">\r\n                Content not available for Viewing\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FundingAdjustmentList;\r\n","import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst TaxPenaltyList = () => {\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Fund Adj Id</TableCell>\r\n            <TableCell align=\"center\">Client</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"right\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={6}>\r\n              <Typography variant=\"h4\" color=\"textSecondary\">\r\n                Content not available for Viewing\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaxPenaltyList;\r\n","const billTypeData = [\r\n  { id: 1, name: \"EPO\", shortName: \"epo\", fullName: \"Early Payoff\" },\r\n  { id: 2, name: \"EPD\", shortName: \"epd\", fullName: \"Early Payment Default\" },\r\n  { id: 3, name: \"Pairoff\", shortName: \"pairoff\", fullName: \"Pairoff\" },\r\n  {\r\n    id: 4,\r\n    name: \"Funding Adjustments\",\r\n    shortName: \"fundingadj\",\r\n    fullName: \"Funding Adjustments\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tax Penalties\",\r\n    shortName: \"taxpen\",\r\n    fullName: \"Tax Penalties\",\r\n  },\r\n];\r\n\r\nexport default billTypeData;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Adjustments } from \"heroicons-react\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport EpdForm from \"../components/billTypeList/EpdForm\";\r\nimport EpdList from \"../components/billTypeList/EpdList\";\r\nimport EpoForm from \"../components/billTypeList/EpoForm\";\r\nimport EpoList from \"../components/billTypeList/EpoList\";\r\nimport SearchBox from \"../components/billTypeList/SearchBox\";\r\nimport epoData from \"../__mocks__/epoData\";\r\nimport epdData from \"../__mocks__/epdData\";\r\nimport pairoffData from \"../__mocks__/pairoffData\";\r\nimport PairoffList from \"../components/billTypeList/PairoffList\";\r\nimport PairoffForm from \"../components/billTypeList/PairoffForm\";\r\nimport FundingAdjustmentList from \"../components/billTypeList/FundingAdjustmentList\";\r\nimport TaxPenaltyList from \"../components/billTypeList/TaxPenaltyList\";\r\nimport { useParams } from \"react-router\";\r\nimport billTypeData from \"../__mocks__/billTypeData\";\r\n\r\nconst BillTypeList1 = ({ mode }) => {\r\n  const { billtypename, billtypeid } = useParams();\r\n\r\n  const tabValue =\r\n    billTypeData.find((x) => x.shortName === billtypename).id - 1;\r\n\r\n  function getClientId(name, billtypeid) {\r\n    let clientId = 0;\r\n    if (name === \"epo\")\r\n      clientId = epoData.find((x) => x.id === parseInt(billtypeid)).clientId;\r\n    else if (name === \"epd\")\r\n      clientId = epdData.find((x) => x.id === parseInt(billtypeid)).clientId;\r\n    else if (name === \"pairoff\")\r\n      clientId = pairoffData.find(\r\n        (x) => x.id === parseInt(billtypeid)\r\n      ).clientId;\r\n\r\n    return clientId;\r\n  }\r\n\r\n  let clientId = 0;\r\n  if (mode === \"edit\") {\r\n    clientId = getClientId(billtypename, billtypeid);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Management: Bill Types</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h2\">Bill Types</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Tabs\r\n                        value={tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                      >\r\n                        <Tab label=\"Early Payoffs\" href=\"/app/billtypes/epo\" />\r\n                        <Tab\r\n                          label=\"Early Payment Defaults\"\r\n                          href=\"/app/billtypes/epd\"\r\n                        />\r\n                        <Tab label=\"Pairoffs\" href=\"/app/billtypes/pairoff\" />\r\n                        <Tab\r\n                          label=\"Funding Adjustments\"\r\n                          href=\"/app/billtypes/fundingadj\"\r\n                        />\r\n                        <Tab\r\n                          label=\"Tax Penalties\"\r\n                          href=\"/app/billtypes/taxpen\"\r\n                        />\r\n                      </Tabs>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid container spacing={2}>\r\n                        {mode === \"list\" && (\r\n                          <Grid item xs={12}>\r\n                            <SearchBox />\r\n                          </Grid>\r\n                        )}\r\n\r\n                        <Grid item xs={12}>\r\n                          {tabValue === 0 &&\r\n                            (mode === \"list\" ? (\r\n                              <>\r\n                                <Divider />\r\n                                <EpoList data={epoData} />\r\n                              </>\r\n                            ) : (\r\n                              <EpoForm\r\n                                clientId={clientId}\r\n                                billTypeId={parseInt(billtypeid)}\r\n                              />\r\n                            ))}\r\n                          {tabValue === 1 &&\r\n                            (mode === \"list\" ? (\r\n                              <>\r\n                                <Divider />\r\n                                <EpdList data={epdData} />\r\n                              </>\r\n                            ) : (\r\n                              <EpdForm\r\n                                clientId={clientId}\r\n                                billTypeId={parseInt(billtypeid)}\r\n                              />\r\n                            ))}\r\n                          {tabValue === 2 &&\r\n                            (mode === \"list\" ? (\r\n                              <>\r\n                                <Divider />\r\n                                <PairoffList data={pairoffData} />\r\n                              </>\r\n                            ) : (\r\n                              <PairoffForm\r\n                                clientId={clientId}\r\n                                billTypeId={parseInt(billtypeid)}\r\n                              />\r\n                            ))}\r\n                          {tabValue === 3 && mode === \"list\" && (\r\n                            <>\r\n                              <Divider />\r\n                              <FundingAdjustmentList />\r\n                            </>\r\n                          )}\r\n                          {tabValue === 4 && mode === \"list\" && (\r\n                            <>\r\n                              <Divider />\r\n                              <TaxPenaltyList />\r\n                            </>\r\n                          )}\r\n                        </Grid>\r\n                        {mode === \"list\" && tabValue != 3 && tabValue != 4 && (\r\n                          <Grid\r\n                            container\r\n                            item\r\n                            xs={12}\r\n                            justifyContent=\"flex-end\"\r\n                          >\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              href={`/app/billtypes/${billtypename}/new`}\r\n                              startIcon={<Adjustments />}\r\n                            >\r\n                              Add New\r\n                            </Button>\r\n                          </Grid>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillTypeList1;\r\n","import {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport billingPeriods from \"../../__mocks__/billingPeriods\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\n\r\nconst ClientSearchBox = () => {\r\n  return (\r\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n      <Box sx={{ mr: 1 }}>\r\n        <Autocomplete\r\n          selectOnFocus\r\n          clearOnBlur\r\n          handleHomeEndKeys\r\n          renderOption={(option) => option.name}\r\n          options={clientData}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n              placeholder=\"Search by Client\"\r\n              variant=\"outlined\"\r\n              {...params}\r\n            />\r\n          )}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Box>\r\n      <Box sx={{ ml: 3 }}>\r\n        <FormControl variant=\"outlined\" style={{ width: 200 }}>\r\n          <InputLabel htmlFor=\"period\">Search by Status</InputLabel>\r\n          <Select\r\n            native\r\n            label=\"Search by Status\"\r\n            inputProps={{\r\n              name: \"status\",\r\n              id: \"status\",\r\n            }}\r\n          >\r\n            <option value=\"\"></option>\r\n            <option value=\"Pending\">Active</option>\r\n            <option value=\"Pending\">Inactive</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ClientSearchBox;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport ViewComfyIcon from \"@material-ui/icons/ViewComfy\";\r\nimport branchListData from \"../../__mocks__/branchListData\";\r\n\r\nconst ClientList = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Client Name</TableCell>\r\n            <TableCell align=\"center\">NMLS #</TableCell>\r\n            <TableCell align=\"center\">DBA</TableCell>\r\n            <TableCell align=\"center\">Channel Approved for?</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">{item.name}</TableCell>\r\n                <TableCell align=\"center\">{item.nmls}</TableCell>\r\n                <TableCell align=\"center\">{item.dba}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {item.delegatedStatus === \"Active\" &&\r\n                  item.nonDelegatedStatus === \"Active\"\r\n                    ? \"Dual\"\r\n                    : item.delegatedStatus === \"Active\"\r\n                    ? \"Delegated\"\r\n                    : item.nonDelegatedStatus === \"Active\"\r\n                    ? \"Non-Delegated\"\r\n                    : \"Unknown\"}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.status}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    href={`/app/clients/${item.id}/detail`}\r\n                  >\r\n                    <ViewComfyIcon size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport ClientSearchBox from \"../components/clientList/ClientSearchBox\";\r\n\r\nimport ClientListC from \"../components/clientList/ClientList\";\r\nimport clientData from \"../__mocks__/clientData\";\r\n\r\nconst ClientList = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Management: Client List</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid container item xs={12} justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Typography variant=\"h2\">Client List</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  href=\"#\"\r\n                  startIcon={<RefreshIcon />}\r\n                >\r\n                  Refresh ALL Clients\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <ClientSearchBox />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <ClientListC data={clientData} />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n","import { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  colors,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nconst BillAmountByMonth = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        barPercentage: 0.5,\r\n        barThickness: 12,\r\n        borderRadius: 4,\r\n        categoryPercentage: 0.5,\r\n        data: [\r\n          560293, 328783, 340993, 236723, 898949, 1090234, 347677, 2398989,\r\n          394839, 384478, 1298392, 2398292,\r\n        ],\r\n        label: \"Amount\",\r\n        maxBarThickness: 10,\r\n      },\r\n    ],\r\n    labels: [\r\n      \"Jan-2021\",\r\n      \"Feb-2021\",\r\n      \"Mar-2021\",\r\n      \"Apr-2021\",\r\n      \"May-2021\",\r\n      \"Jun-2021\",\r\n      \"Jul-2021\",\r\n      \"Aug-2021\",\r\n      \"Sep-2021\",\r\n      \"Oct-2021\",\r\n      \"Nov-2021\",\r\n      \"Dec-2021\",\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: \"index\",\r\n      titleFontColor: theme.palette.text.primary,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        action={\r\n          <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\">\r\n            Last One Year\r\n          </Button>\r\n        }\r\n        title={\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n            BILL AMOUNT BY MONTH\r\n          </Typography>\r\n        }\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 500,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Bar data={data} options={options} />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BillAmountByMonth;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  useTheme,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { MoreVertTwoTone } from \"@material-ui/icons\";\r\n\r\nconst OutstandingBillTypes = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [1200, 670, 340, 120, 75],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600],\r\n          colors.blue[600],\r\n          colors.yellow[600],\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white,\r\n      },\r\n    ],\r\n    labels: [\"EPO\", \"EPD\", \"Pairoff\", \"Fund Adj\", \"Tax Pen\"],\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 50,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: \"index\",\r\n      titleFontColor: theme.palette.text.primary,\r\n    },\r\n  };\r\n\r\n  const billTypes = [\r\n    {\r\n      title: \"EPO\",\r\n      value: 1200,\r\n      color: colors.indigo[500],\r\n    },\r\n    {\r\n      title: \"EPD\",\r\n      value: 670,\r\n      color: colors.red[600],\r\n    },\r\n    {\r\n      title: \"Pairoff\",\r\n      value: 340,\r\n      color: colors.orange[600],\r\n    },\r\n    {\r\n      title: \"Fund Adj\",\r\n      value: 120,\r\n      color: colors.blue[600],\r\n    },\r\n    {\r\n      title: \"Tax Pen\",\r\n      value: 75,\r\n      color: colors.yellow[600],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title={\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n            OUTSTANDING BILL TYPES\r\n          </Typography>\r\n        }\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 390,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Doughnut data={data} options={options} />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            pt: 2,\r\n          }}\r\n        >\r\n          {billTypes.map(({ color, title, value }) => (\r\n            <Box\r\n              key={title}\r\n              sx={{\r\n                p: 1,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <Typography color=\"textPrimary\" variant=\"h6\">\r\n                {title}\r\n              </Typography>\r\n              <Typography style={{ color }} variant=\"body\">\r\n                {value}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n          endIcon={<MoreVertTwoTone />}\r\n          href=\"/app/billtypes\"\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OutstandingBillTypes;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { AdjustSharp, MoreVertTwoTone } from \"@material-ui/icons\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CurrencyDollar } from \"heroicons-react\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: red[600],\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n});\r\n\r\nconst TotalAdjustmentApplied = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={3} justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL ADJUSTMENTS APPLIED\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              <NumberFormat\r\n                value={547823}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n                decimalSeparator=\".\"\r\n                thousandsGroupStyle=\"thousand\"\r\n                decimalScale={2}\r\n                fixedDecimalScale={true}\r\n              />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AdjustSharp />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n          endIcon={<MoreVertTwoTone />}\r\n          href=\"/app/paymentadjustments/adjustments\"\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalAdjustmentApplied;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { blue, green } from \"@material-ui/core/colors\";\r\nimport {\r\n  MoreHoriz,\r\n  More,\r\n  MoreOutlined,\r\n  MoreHorizTwoTone,\r\n  MoreVertTwoTone,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: green[600],\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n});\r\n\r\nconst TotalClients = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={3} justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL CLIENTS\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              250\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n          endIcon={<MoreVertTwoTone />}\r\n          href=\"/app/clients\"\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalClients;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { MoreVertTwoTone } from \"@material-ui/icons\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CurrencyDollar } from \"heroicons-react\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[600],\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n});\r\n\r\nconst TotalOutstandingAmount = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={3} justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL AMOUNT OUTSTANDING\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              <NumberFormat\r\n                value={896237}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n                decimalSeparator=\".\"\r\n                thousandsGroupStyle=\"thousand\"\r\n                decimalScale={2}\r\n                fixedDecimalScale={true}\r\n              />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <CurrencyDollar />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n          endIcon={<MoreVertTwoTone />}\r\n          href=\"/app/clients\"\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalOutstandingAmount;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { MoreVertTwoTone } from \"@material-ui/icons\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CurrencyDollar } from \"heroicons-react\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: red[600],\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n});\r\n\r\nconst TotalPaymentReceived = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={3} justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              TOTAL PAYMENT RRECEIVED\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              <NumberFormat\r\n                value={1596237}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n                decimalSeparator=\".\"\r\n                thousandsGroupStyle=\"thousand\"\r\n                decimalScale={2}\r\n                fixedDecimalScale={true}\r\n              />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <CurrencyDollar />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n          endIcon={<MoreVertTwoTone />}\r\n          href=\"/app/paymentadjustments/payments\"\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalPaymentReceived;\r\n","import { Box, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport BillAmountByMonth from \"../components/dashboard/BillAmountByMonth\";\r\nimport OutstandingBillTypes from \"../components/dashboard/OutstandingBillTypes\";\r\nimport TotalAdjustmentApplied from \"../components/dashboard/TotalAdjustmentApplied\";\r\nimport TotalClients from \"../components/dashboard/TotalClients\";\r\nimport TotalOutstandingAmount from \"../components/dashboard/TotalOutstandingAmount\";\r\nimport TotalPaymentReceived from \"../components/dashboard/TotalPaymentReceived\";\r\n\r\nconst Dashboard = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Billing: Dashboard</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"background.default\",\r\n        minHeight: \"100%\",\r\n        py: 3,\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={2}>\r\n          <Grid container item xs={12} justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h2\">Dashboard</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item spacing={2}>\r\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n              <TotalClients />\r\n            </Grid>\r\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n              <TotalOutstandingAmount />\r\n            </Grid>\r\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n              <TotalPaymentReceived />\r\n            </Grid>\r\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n              <TotalAdjustmentApplied />\r\n            </Grid>\r\n            <Grid item lg={8} md={12} xl={9} xs={12}>\r\n              <BillAmountByMonth />\r\n            </Grid>\r\n            <Grid item lg={4} md={6} xl={3} xs={12}>\r\n              <OutstandingBillTypes />\r\n            </Grid>\r\n            <Grid item lg={4} md={6} xl={3} xs={12}></Grid>\r\n            <Grid item lg={8} md={12} xl={9} xs={12}></Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Dashboard;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ChannelCard = ({ brand, channel, avatarText, subHeader, content }) => {\r\n  return (\r\n    <Card variant=\"outlined\" sx={{ height: \"100%\" }}>\r\n      <CardHeader\r\n        avatar={<Avatar aria-label=\"recipe\">{avatarText}</Avatar>}\r\n        title={\r\n          <Typography variant=\"h6\">\r\n            {brand} {channel}\r\n          </Typography>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVert />\r\n          </IconButton>\r\n        }\r\n        subheader={subHeader}\r\n      ></CardHeader>\r\n      <CardContent sx={{ pt: 0 }}>{content}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nChannelCard.propTypes = {\r\n  brand: PropTypes.string,\r\n  channel: PropTypes.string,\r\n  avatarText: PropTypes.string,\r\n  subHeader: PropTypes.string,\r\n  content: PropTypes.element,\r\n};\r\n\r\nexport default ChannelCard;\r\n","import { FormControl, FormLabel } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControlRoot: {\r\n    flexDirection: \"row\",\r\n    flex: \"1 1 auto\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n    padding: theme.spacing(1.5),\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n  },\r\n  formLabel: {\r\n    fontSize: \"0.84rem\",\r\n  },\r\n}));\r\n\r\nconst Fieldset = ({ label, children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl component=\"fieldset\" className={classes.formControlRoot}>\r\n      <FormLabel component=\"legend\" className={classes.formLabel}>\r\n        {label}\r\n      </FormLabel>\r\n      {children}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Fieldset;\r\n","import { IconButton, Box, Button, Typography } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { AttachFile } from \"@material-ui/icons\";\r\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    boxRoot: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n    },\r\n    deleteIconButton: {\r\n      padding: theme.spacing(0),\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst FileUpload = ({ id }) => {\r\n  const classes = useStyles();\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const handleFileSelect = (e) => {\r\n    setFileName(e.target.value);\r\n  };\r\n\r\n  const handleFileDelete = () => {\r\n    setFileName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.boxRoot}>\r\n        <input\r\n          accept=\"image/*\"\r\n          hidden\r\n          id={id}\r\n          multiple\r\n          type=\"file\"\r\n          onChange={handleFileSelect}\r\n          value={fileName}\r\n        />\r\n        <label htmlFor={id}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            endIcon={<AttachFile />}\r\n            component=\"span\"\r\n            className={classes.button}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </label>\r\n        {fileName && (\r\n          <>\r\n            <Typography variant=\"body2\">{fileName}</Typography>\r\n            <IconButton\r\n              className={classes.deleteIconButton}\r\n              onClick={handleFileDelete}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import { Grid, Box, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Fieldset from \"../common/Fieldset\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CoIssueButtonSet = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"EPD/EPO/Pairoff\">\r\n          <Box>\r\n            <FileUpload id=\"coiss-epoepdpairoff\" />\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Dry Run\r\n            </Button>\r\n          </Box>\r\n        </Fieldset>\r\n      </Grid>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"Funding Adjustment File Upload\">\r\n          <Box>\r\n            <FileUpload id=\"coiss-fundadj\" />\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Dry Run\r\n            </Button>\r\n          </Box>\r\n        </Fieldset>\r\n      </Grid>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"Tax Penalties\">\r\n          <Box>\r\n            <FileUpload id=\"coiss-taxpen\" />\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Dry Run\r\n            </Button>\r\n          </Box>\r\n        </Fieldset>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CoIssueButtonSet;\r\n","import { Button, Grid, Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Fieldset from \"../common/Fieldset\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CommonButtonSet = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"Import EPO/EPD/Pairoff\">\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              EPO\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              EPD\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Pairoff\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              ALL\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Dry Run\r\n            </Button>\r\n          </Box>\r\n        </Fieldset>\r\n      </Grid>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"Funding Adjustment File Upload\">\r\n          <Box>\r\n            <FileUpload id=\"corr-fundadj\" />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Dry Run\r\n            </Button>\r\n          </Box>\r\n        </Fieldset>\r\n      </Grid>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"Tax Penalties\">\r\n          <Box>\r\n            <FileUpload id=\"corr-taxpen\" />\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Dry Run\r\n            </Button>\r\n          </Box>\r\n        </Fieldset>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CommonButtonSet;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Avatar,\r\n  Menu,\r\n  MenuItem,\r\n  TableFooter,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\n\r\nconst ImportedDataList = ({ data }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem>Export to Excel</MenuItem>\r\n        <MenuItem>Copy</MenuItem>\r\n      </Menu>\r\n      <Card>\r\n        <CardHeader\r\n          title={<Typography variant=\"h4\">Bill Type Data</Typography>}\r\n          avatar={<Avatar>ID</Avatar>}\r\n          action={\r\n            <IconButton\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              <MoreVert />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>#</TableCell>\r\n              <TableCell align=\"center\">Brand</TableCell>\r\n              <TableCell align=\"center\">Channel</TableCell>\r\n              <TableCell align=\"center\">Bill Type</TableCell>\r\n              <TableCell align=\"right\">Total Amount</TableCell>\r\n              <TableCell align=\"right\">Amount Pending</TableCell>\r\n              <TableCell align=\"right\">Amount Billed</TableCell>\r\n              <TableCell align=\"right\">Amount Closed</TableCell>\r\n              <TableCell align=\"right\">Payments & Adjustments</TableCell>\r\n              <TableCell align=\"right\">Amount Due</TableCell>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.id}</TableCell>\r\n                <TableCell align=\"center\">{item.Brand}</TableCell>\r\n                <TableCell align=\"center\">{item.Channel}</TableCell>\r\n                <TableCell align=\"center\">{item.BillType}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.TotalAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.AmountPending}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.AmountBilled}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.AmountClosed}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.PaymentAdjustment}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.TotalAmount - item.PaymentAdjustment}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {item.TotalAmount - item.PaymentAdjustment > 0 ? (\r\n                    <StyledLabel\r\n                      label=\"outstanding\"\r\n                      bgColor=\"rgb(255, 152, 0)\"\r\n                    />\r\n                  ) : (\r\n                    <StyledLabel label=\"Paid\" bgColor=\"rgb(76, 175, 80)\" />\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TableCell align=\"right\" colSpan={11}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"right\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body1\"\r\n                    style={{ marginRight: \"50px\" }}\r\n                  >\r\n                    Total Amount:{\" \"}\r\n                    <NumberFormat\r\n                      value={data.reduce((f, s) => (f = f + s.TotalAmount), 0)}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                      decimalSeparator=\".\"\r\n                      thousandsGroupStyle=\"thousand\"\r\n                      decimalScale={2}\r\n                      fixedDecimalScale={true}\r\n                    />\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body1\"\r\n                    style={{ marginRight: \"25px\" }}\r\n                  >\r\n                    Total Amount Due:{\" \"}\r\n                    <NumberFormat\r\n                      value={data.reduce(\r\n                        (f, s) =>\r\n                          (f = f + (s.TotalAmount - s.PaymentAdjustment)),\r\n                        0\r\n                      )}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                      decimalSeparator=\".\"\r\n                      thousandsGroupStyle=\"thousand\"\r\n                      decimalScale={2}\r\n                      fixedDecimalScale={true}\r\n                    />\r\n                  </Typography>\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nImportedDataList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImportedDataList;\r\n","export default [\r\n  {\r\n    id: 1,\r\n    Brand: \"MRC\",\r\n    Channel: \"Delegated\",\r\n    BillType: \"EPO\",\r\n    TotalAmount: 500000,\r\n    AmountPending: 201290,\r\n    AmountBilled: 10500,\r\n    AmountClosed: 30000,\r\n    PaymentAdjustment: 5000,\r\n  },\r\n  {\r\n    id: 2,\r\n    Brand: \"MRC\",\r\n    Channel: \"Delegated\",\r\n    BillType: \"EPD\",\r\n    TotalAmount: 601000,\r\n    AmountPending: 0,\r\n    AmountBilled: 0,\r\n    AmountClosed: 601000,\r\n    PaymentAdjustment: 601000,\r\n  },\r\n  {\r\n    id: 3,\r\n    Brand: \"MRC\",\r\n    Channel: \"Delegated\",\r\n    BillType: \"Pairoff\",\r\n    TotalAmount: 800093,\r\n    AmountPending: 0,\r\n    AmountBilled: 0,\r\n    AmountClosed: 0,\r\n    PaymentAdjustment: 0,\r\n  },\r\n  {\r\n    id: 4,\r\n    Brand: \"MRC\",\r\n    Channel: \"Non-Delegated\",\r\n    BillType: \"EPO\",\r\n    TotalAmount: 500000,\r\n    AmountPending: 0,\r\n    AmountBilled: 0,\r\n    AmountClosed: 0,\r\n    PaymentAdjustment: 0,\r\n  },\r\n  {\r\n    id: 5,\r\n    Brand: \"MRC\",\r\n    Channel: \"Non-Delegated\",\r\n    BillType: \"EPD\",\r\n    TotalAmount: 8109093,\r\n    AmountPending: 0,\r\n    AmountBilled: 0,\r\n    AmountClosed: 8109093,\r\n    PaymentAdjustment: 8109093,\r\n  },\r\n  {\r\n    id: 6,\r\n    Brand: \"MRC\",\r\n    Channel: \"Non-Delegated\",\r\n    BillType: \"Pairoff\",\r\n    TotalAmount: 800093,\r\n    AmountPending: 0,\r\n    AmountBilled: 0,\r\n    AmountClosed: 800093,\r\n    PaymentAdjustment: 800093,\r\n  },\r\n];\r\n","import {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\n\r\nimport ChannelCard from \"../components/importdata/ChannelCard\";\r\nimport CoIssueButtonSet from \"../components/importdata/CoIssueButtonSet\";\r\nimport CommonButtonSet from \"../components/importdata/CommonButtonSet\";\r\nimport ImportedDataList from \"../components/importdata/ImportedDataList\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport importedData from \"../__mocks__/importedData\";\r\nimport billingPeriods from \"../__mocks__/billingPeriods\";\r\nimport channelListData from \"../__mocks__/channelListData\";\r\nimport brandListData from \"../__mocks__/brandListData\";\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst ImportDataForm = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Billing: Import Data</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h2\">\r\n                Import data from external source\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid item container spacing={3}>\r\n                <Grid item xs={6} xl={3}>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel htmlFor=\"period\">Choose Period</InputLabel>\r\n                    <Select\r\n                      native\r\n                      label=\"Choose Period\"\r\n                      inputProps={{\r\n                        name: \"period\",\r\n                        id: \"period\",\r\n                      }}\r\n                    >\r\n                      {billingPeriods.map((x) => (\r\n                        <option value={x.value} key={x.value}>\r\n                          {x.description}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <ChannelCard\r\n                brand={brandListData[0].name}\r\n                channel={\r\n                  channelListData[0].name + \" \" + channelListData[1].name\r\n                }\r\n                avatarText=\"A\"\r\n                //subHeader=\"Use this region to import data for the MRC Delegated & Non-Delegated channel. Click on the Dry Run button to download an excel mimicing the refresh feature\"\r\n                content={<CommonButtonSet />}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <ChannelCard\r\n                brand={brandListData[0].name}\r\n                channel={channelListData[2].name}\r\n                avatarText=\"C\"\r\n                //subHeader=\"Use this region to import data for the MRC CoIssue channel. Click on the Dry Run button to download an excel mimicing the refresh feature\"\r\n                content={<CoIssueButtonSet />}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} lg={12}>\r\n              <ImportedDataList data={importedData} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportDataForm;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport branchListData from \"../../__mocks__/branchListData\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\nimport { ViewComfy } from \"@material-ui/icons\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\n\r\nconst InvoiceList = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">View Invoice</TableCell>\r\n            <TableCell align=\"center\">Invoice Id</TableCell>\r\n            <TableCell align=\"center\">Branch</TableCell>\r\n            <TableCell align=\"center\">Client</TableCell>\r\n            <TableCell align=\"center\">Contacts</TableCell>\r\n            <TableCell align=\"right\">Outstanding Amount</TableCell>\r\n            <TableCell align=\"right\">New Amount</TableCell>\r\n            <TableCell align=\"right\">Total Amount</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={index + 1}>\r\n                <TableCell align=\"center\">\r\n                  <IconButton size=\"medium\">\r\n                    <ViewComfy />\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.invoiceId}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {branchListData.find((b) => b.id == item.branchId).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {clientData.find((c) => c.id === item.clientId).name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{item.contacts}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.outstandingAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.newAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.outstandingAmount + item.newAmount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <StyledLabel\r\n                    label={item.status}\r\n                    bgColor={\r\n                      item.status === \"Pending\"\r\n                        ? \"rgb(255, 152, 0)\"\r\n                        : \"rgb(76, 175, 80)\"\r\n                    }\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceList;\r\n","import {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport billingPeriods from \"../../__mocks__/billingPeriods\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\n\r\nconst SearchBox = () => {\r\n  return (\r\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n      <Box sx={{ mr: 1 }}>\r\n        <FormControl variant=\"outlined\" style={{ width: 180 }}>\r\n          <InputLabel htmlFor=\"period\">Search Period</InputLabel>\r\n          <Select\r\n            native\r\n            label=\"Search Period\"\r\n            inputProps={{\r\n              name: \"period\",\r\n              id: \"period\",\r\n            }}\r\n          >\r\n            {billingPeriods.map((x) => (\r\n              <option value={x.value} key={x.value}>\r\n                {x.description}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Box sx={{ mr: 1 }}>\r\n        <Autocomplete\r\n          selectOnFocus\r\n          clearOnBlur\r\n          handleHomeEndKeys\r\n          renderOption={(option) => option.name}\r\n          options={clientData}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n              placeholder=\"Search by Client\"\r\n              variant=\"outlined\"\r\n              {...params}\r\n            />\r\n          )}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Box>\r\n      <Box sx={{ ml: 3 }}>\r\n        <FormControl variant=\"outlined\" style={{ width: 200 }}>\r\n          <InputLabel htmlFor=\"period\">Search by Status</InputLabel>\r\n          <Select\r\n            native\r\n            label=\"Search by Status\"\r\n            inputProps={{\r\n              name: \"status\",\r\n              id: \"status\",\r\n            }}\r\n          >\r\n            <option value=\"\"></option>\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"Pending\">Billed</option>\r\n            <option value=\"Pending\">Cosed</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","const invoiceListData = [\r\n  {\r\n    invoiceId: 1201,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 1,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 1000,\r\n    newAmount: 2000,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1202,\r\n    batchId: 1001,\r\n    branchId: 2,\r\n    clientId: 2,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 999,\r\n    newAmount: 1999,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1203,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 3,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 1430,\r\n    newAmount: 560,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1204,\r\n    batchId: 1001,\r\n    branchId: 3,\r\n    clientId: 4,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 3487,\r\n    newAmount: 2345,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1205,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 5,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 32987,\r\n    newAmount: 2437,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1206,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 6,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 34567,\r\n    newAmount: 12479,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1207,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 7,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 74655,\r\n    newAmount: 34767,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1208,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 8,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 23424,\r\n    newAmount: 96703,\r\n    status: \"Pending\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1209,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 9,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 12234,\r\n    newAmount: 67867,\r\n    status: \"Pending\",\r\n    active: false,\r\n  },\r\n  {\r\n    invoiceId: 1210,\r\n    batchId: 1001,\r\n    branchId: 1,\r\n    clientId: 10,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 98599,\r\n    newAmount: 32486,\r\n    status: \"Pending\",\r\n    active: false,\r\n  },\r\n\r\n  {\r\n    invoiceId: 1301,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 1,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 1000,\r\n    newAmount: 2000,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1302,\r\n    batchId: 1002,\r\n    branchId: 2,\r\n    clientId: 2,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 999,\r\n    newAmount: 1999,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1303,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 3,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 1430,\r\n    newAmount: 560,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1304,\r\n    batchId: 1002,\r\n    branchId: 3,\r\n    clientId: 4,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 3487,\r\n    newAmount: 2345,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1305,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 5,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 32987,\r\n    newAmount: 2437,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1306,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 6,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 34567,\r\n    newAmount: 12479,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1307,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 7,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 74655,\r\n    newAmount: 34767,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1308,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 8,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 23424,\r\n    newAmount: 96703,\r\n    status: \"Billed\",\r\n    active: true,\r\n  },\r\n  {\r\n    invoiceId: 1309,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 9,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 12234,\r\n    newAmount: 67867,\r\n    status: \"Billed\",\r\n    active: false,\r\n  },\r\n  {\r\n    invoiceId: 1310,\r\n    batchId: 1002,\r\n    branchId: 1,\r\n    clientId: 10,\r\n    contacts: \"dummy@mrcooper.com\",\r\n    outstandingAmount: 98599,\r\n    newAmount: 32486,\r\n    status: \"Billed\",\r\n    active: false,\r\n  },\r\n];\r\n\r\nexport default invoiceListData;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport InvoiceList from \"../components/batchForm/InvoiceList\";\r\nimport SearchBox from \"../components/viewInvoice/SearchBox\";\r\nimport invoiceListData from \"../__mocks__/invoiceListData\";\r\n\r\nconst ViewInvoice = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Billing: Invoices </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h2\">View Invoices</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <SearchBox />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <InvoiceList data={invoiceListData} />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewInvoice;\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVertTwoTone } from \"@material-ui/icons\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    color: theme.palette.getContrastText(blue[500]),\r\n    backgroundColor: blue[500],\r\n  },\r\n}));\r\n\r\nconst QuickLinkCard = ({ quickLink }) => {\r\n  const classes = useStyles();\r\n  const { media: Icon, actionComponent: ActionComponent } = quickLink;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            pb: 3,\r\n          }}\r\n        >\r\n          <Avatar alt=\"Link\" variant=\"rounded\" className={classes.avatar}>\r\n            <Icon />\r\n          </Avatar>\r\n        </Box>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h5\"\r\n        >\r\n          {quickLink.title}\r\n        </Typography>\r\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\r\n          {quickLink.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item className={classes.grid}>\r\n            <ActionComponent />\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nQuickLinkCard.propTypes = {\r\n  quickLink: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default QuickLinkCard;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport QuickLinkCard from \"../components/quickLinks/QuickLinkCard\";\r\nimport {\r\n  ChartBarOutline,\r\n  Link,\r\n  Refresh,\r\n  ReceiptRefund,\r\n  Users,\r\n  ViewList,\r\n  CurrencyDollar,\r\n  Adjustments,\r\n  DocumentReport,\r\n  ChevronRight,\r\n} from \"heroicons-react\";\r\nimport { Adjust } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport clientData from \"../__mocks__/clientData\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport epoData from \"../__mocks__/epoData\";\r\nimport pairoffData from \"../__mocks__/pairoffData\";\r\n\r\nconst DashboardActionComponent = () => (\r\n  <Button\r\n    size=\"medium\"\r\n    style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n    endIcon={<ChevronRight />}\r\n    href=\"/app/dashboard\"\r\n  >\r\n    View Dashboard\r\n  </Button>\r\n);\r\n\r\nconst ClientActionComponent = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [client, setClient] = useState(undefined);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    debugger;\r\n    if (client !== undefined) {\r\n      setOpen(false);\r\n      navigate(`/app/clients/${client.id}/detail`);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setClient(undefined);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (e, newValue) => {\r\n    setClient(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"medium\"\r\n        style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n        endIcon={<ChevronRight />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Choose Client\r\n      </Button>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Choose Client</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Pick a client from the dropdown list and click ok to navigate to the\r\n            client management screen with the selection\r\n          </DialogContentText>\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.name}\r\n            options={clientData}\r\n            getOptionLabel={(option) => option.name}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Client\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={client}\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst BillTypeActionComponent = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [loanNumber, setLoanNumber] = useState(undefined);\r\n  const [tradeId, setTradeId] = useState(undefined);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (loanNumber !== undefined) {\r\n      setOpen(false);\r\n      navigate(`/app/billtypes/epo/${loanNumber.id}/edit`);\r\n    }\r\n\r\n    if (tradeId !== undefined) {\r\n      setOpen(false);\r\n      navigate(`/app/billtypes/pairoff/${tradeId.id}/edit`);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setLoanNumber(undefined);\r\n    setTradeId(undefined);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLoanNumberChange = (e, newValue) => {\r\n    setLoanNumber(newValue);\r\n  };\r\n\r\n  const handleTradeIdChange = (e, newValue) => {\r\n    setTradeId(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"medium\"\r\n        style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n        endIcon={<ChevronRight />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Choose a Bill Type\r\n      </Button>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Choose Loan Number or Trade Id\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Pick a bill type either by a loan number or a trade id and click OK\r\n            to auto select the appropriate bill type screen.\r\n          </DialogContentText>\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.loanNumber}\r\n            options={epoData}\r\n            getOptionLabel={(option) => option.loanNumber}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Loan Number\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={loanNumber}\r\n            onChange={handleLoanNumberChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <Box sx={{ width: \"100%\", py: 2 }}>\r\n            <Typography variant=\"h5\">--OR--</Typography>\r\n          </Box>\r\n\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.tradeId}\r\n            options={pairoffData}\r\n            getOptionLabel={(option) => option.tradeId}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Trade Id\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={tradeId}\r\n            onChange={handleTradeIdChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PaymentActionComponent = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [loanNumber, setLoanNumber] = useState(undefined);\r\n  const [tradeId, setTradeId] = useState(undefined);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (loanNumber !== undefined || tradeId === undefined) {\r\n      setOpen(false);\r\n      navigate(`/app/paymentadjustments/payments/new`);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setLoanNumber(undefined);\r\n    setTradeId(undefined);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLoanNumberChange = (e, newValue) => {\r\n    setLoanNumber(newValue);\r\n  };\r\n\r\n  const handleTradeIdChange = (e, newValue) => {\r\n    setTradeId(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"medium\"\r\n        style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n        endIcon={<ChevronRight />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Make a Payment\r\n      </Button>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Choose Loan Number or Trade Id\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Pick either a loan number or a trade id and click OK to auto select\r\n            the payment screen with necessary selections.\r\n          </DialogContentText>\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.loanNumber}\r\n            options={epoData}\r\n            getOptionLabel={(option) => option.loanNumber}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Loan Number\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={loanNumber}\r\n            onChange={handleLoanNumberChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <Box sx={{ width: \"100%\", py: 2 }}>\r\n            <Typography variant=\"h5\">--OR--</Typography>\r\n          </Box>\r\n\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.tradeId}\r\n            options={pairoffData}\r\n            getOptionLabel={(option) => option.tradeId}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Trade Id\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={tradeId}\r\n            onChange={handleTradeIdChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AdjustmentActionComponent = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [loanNumber, setLoanNumber] = useState(undefined);\r\n  const [tradeId, setTradeId] = useState(undefined);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (loanNumber !== undefined || tradeId === undefined) {\r\n      setOpen(false);\r\n      navigate(`/app/paymentadjustments/adjustments/new`);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setLoanNumber(undefined);\r\n    setTradeId(undefined);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLoanNumberChange = (e, newValue) => {\r\n    setLoanNumber(newValue);\r\n  };\r\n\r\n  const handleTradeIdChange = (e, newValue) => {\r\n    setTradeId(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        size=\"medium\"\r\n        style={{ color: \"blue\", marginLeft: \"auto\" }}\r\n        endIcon={<ChevronRight />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Apply an Adjustment\r\n      </Button>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Choose Loan Number or Trade Id\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Pick either a loan number or a trade id and click OK to auto select\r\n            the Adjustment screen with necessary selections.\r\n          </DialogContentText>\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.loanNumber}\r\n            options={epoData}\r\n            getOptionLabel={(option) => option.loanNumber}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Loan Number\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={loanNumber}\r\n            onChange={handleLoanNumberChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <Box sx={{ width: \"100%\", py: 2 }}>\r\n            <Typography variant=\"h5\">--OR--</Typography>\r\n          </Box>\r\n\r\n          <Autocomplete\r\n            selectOnFocus\r\n            clearOnBlur\r\n            handleHomeEndKeys\r\n            renderOption={(option) => option.tradeId}\r\n            options={pairoffData}\r\n            getOptionLabel={(option) => option.tradeId}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  type: \"search\",\r\n                }}\r\n                placeholder=\"Select Trade Id\"\r\n                variant=\"outlined\"\r\n                {...params}\r\n              />\r\n            )}\r\n            value={tradeId}\r\n            onChange={handleTradeIdChange}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst quickLinks = [\r\n  {\r\n    id: 1,\r\n    description:\r\n      \"Dashboard provides a summary view of the entire billing system. Click View Dashboard to learn more.\",\r\n    media: ChartBarOutline,\r\n    title: \"Dashboard\",\r\n    actionComponent: DashboardActionComponent,\r\n  },\r\n  {\r\n    id: 2,\r\n    description:\r\n      \"Clients provide a quick and easy way to navigate to the client screen. Click Choose Client to learn more.\",\r\n    media: Users,\r\n    title: \"Clients\",\r\n    actionComponent: ClientActionComponent,\r\n  },\r\n  {\r\n    id: 3,\r\n    description:\r\n      \"Bill Types provide a quick and easy way to choose a bill type either by a loan number or a trade id. Click Choose Bill Types to learn more.\",\r\n    media: Adjustments,\r\n    title: \"Bill Types\",\r\n    actionComponent: BillTypeActionComponent,\r\n  },\r\n  {\r\n    id: 4,\r\n    description:\r\n      \"Make a new payment quickly using this link by selecting either a loan number or a trade id. Click Make a payment to learn more.\",\r\n    media: CurrencyDollar,\r\n    title: \"Make a Payment\",\r\n    actionComponent: PaymentActionComponent,\r\n  },\r\n  {\r\n    id: 5,\r\n    description:\r\n      \"Apply a new adjustment quickly using this link by selecting either a loan number or a trade id. Click Apply an Adjustment to learn more.\",\r\n    media: Adjust,\r\n    title: \"Apply an Adjustment\",\r\n    actionComponent: AdjustmentActionComponent,\r\n  },\r\n];\r\n\r\nexport const QuickLinks = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Billing: Quick Links</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 3,\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Grid container spacing={2}>\r\n            <Grid container item xs={12} justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Typography variant=\"h2\">Quick Links</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item spacing={3}>\r\n              {quickLinks.map((quickLink) => (\r\n                <Grid item lg={3} sm={6} xl={3} xs={12} key={quickLink.id}>\r\n                  <QuickLinkCard quickLink={quickLink} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuickLinks;\r\n","import { Box, Container, Typography } from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Page Not Found</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"background.default\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <img\r\n            alt=\"Under development\"\r\n            src=\"/app/static/images/undraw_page_not_found_su7k.svg\"\r\n            style={{\r\n              marginTop: 50,\r\n              display: \"inline-block\",\r\n              maxWidth: \"100%\",\r\n              width: 560,\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import {\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport clientData from \"../../__mocks__/clientData\";\r\n\r\nconst SearchBox = ({ captions }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item>\r\n        <Autocomplete\r\n          selectOnFocus\r\n          clearOnBlur\r\n          handleHomeEndKeys\r\n          renderOption={(option) => option.name}\r\n          options={clientData}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                type: \"search\",\r\n              }}\r\n              placeholder=\"Search by Client\"\r\n              variant=\"outlined\"\r\n              {...params}\r\n            />\r\n          )}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <OutlinedInput\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            }\r\n            placeholder=\"Search by Loan Number\"\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl variant=\"outlined\" style={{ width: \"200px\" }}>\r\n          <InputLabel htmlFor=\"Search by Bill Type\">\r\n            Search by Bill Type\r\n          </InputLabel>\r\n          <Select native label=\"Search by Bill Type\">\r\n            <option value=\" \"></option>\r\n            {billTypeData.map((billtype) => (\r\n              <option value={billtype.id} key={billtype.id}>\r\n                {billtype.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { ViewAgendaOutlined } from \"@material-ui/icons\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport { useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\n\r\nconst Row = ({ row, index }) => {\r\n  return (\r\n    <TableRow key={row.id}>\r\n      <TableCell align=\"center\">{index + 1}</TableCell>\r\n      <TableCell align=\"center\">\r\n        {billTypeData.find((x) => x.id === row.billTypeId).name}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {epoData.find((x) => x.id === row.sourceBillTypeId).loanNumber}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{row.receivedDate}</TableCell>\r\n      <TableCell align=\"center\">\r\n        <NumberFormat\r\n          value={row.amount}\r\n          displayType={\"text\"}\r\n          thousandSeparator={true}\r\n          prefix={\"$\"}\r\n          decimalSeparator=\".\"\r\n          thousandsGroupStyle=\"thousand\"\r\n          decimalScale={2}\r\n          fixedDecimalScale={true}\r\n        />\r\n      </TableCell>\r\n      <TableCell align=\"center\">{row.checkNumber}</TableCell>\r\n      <TableCell align=\"center\">{row.wireRefNumber}</TableCell>\r\n      <TableCell align=\"center\">{row.comments}</TableCell>\r\n      <TableCell align=\"center\">\r\n        <IconButton\r\n          size=\"small\"\r\n          href={`/app/paymentadjustments/payments/${row.id}/edit`}\r\n        >\r\n          <Pencil size=\"20\" />\r\n        </IconButton>\r\n        <IconButton\r\n          size=\"small\"\r\n          href={`/app/billtypes/${\r\n            billTypeData.find((x) => x.id === row.billTypeId).shortName\r\n          }/${row.sourceBillTypeId}/edit`}\r\n        >\r\n          <ViewAgendaOutlined size=\"20\" />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nconst PaymentList = ({ data }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Bill Type</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Received Date</TableCell>\r\n            <TableCell align=\"center\">Amount</TableCell>\r\n            <TableCell align=\"center\">Check #</TableCell>\r\n            <TableCell align=\"center\">Wire Ref</TableCell>\r\n            <TableCell align=\"center\">Comments</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <Row key={item.id} row={item} index={index} />\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentList;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Cancel, Save } from \"@material-ui/icons\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\nimport epdData from \"../../__mocks__/epdData\";\r\nimport pairoffData from \"../../__mocks__/pairoffData\";\r\nimport paymentData from \"../../__mocks__/paymentData/paymentData\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport paymentTypeData from \"../../__mocks__/paymentTypeData\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    \"& .MuiCardHeader-action\": {\r\n      marginTop: theme.spacing(0),\r\n      marginRight: theme.spacing(0),\r\n    },\r\n  },\r\n  cardActions: {\r\n    padding: theme.spacing(2),\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst PaymentForm = ({ paymentId }) => {\r\n  const classes = useStyles();\r\n\r\n  const [payment, setPayment] = useState(\r\n    paymentData.find((x) => x.id === paymentId) || {\r\n      id: undefined,\r\n      billTypeId: undefined,\r\n      sourceBillTypeId: undefined,\r\n      paymentTypeId: undefined,\r\n      receivedDate: undefined,\r\n      status: undefined,\r\n      checkNumber: undefined,\r\n      wireRefNumber: undefined,\r\n      amount: undefined,\r\n      comments: undefined,\r\n    }\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setPayment({\r\n      ...payment,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  function getBillTypes() {\r\n    const billTypeId = parseInt(payment.billTypeId);\r\n    if (billTypeId === 1) {\r\n      return epoData.map((x) => ({\r\n        id: x.id,\r\n        item: `EPO Loan: ${x.loanNumber} (${x.status}) (Total Amount $${x.amountDue})`,\r\n      }));\r\n    } else if (billTypeId === 2) {\r\n      return epdData.map((x) => ({\r\n        id: x.id,\r\n        item: `EPD Loan: ${x.loanNumber} (${x.status}) (Total Amount $${x.amountDue})`,\r\n      }));\r\n    } else if (billTypeId === 3) {\r\n      return pairoffData.map((x) => ({\r\n        id: x.id,\r\n        item: `Trace Id: ${x.tradeId} (${x.status}) (Total Amount $${x.amountDue})`,\r\n      }));\r\n    } else {\r\n      return [{}];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate>\r\n      <Container maxWidth=\"lg\">\r\n        <Card>\r\n          <CardHeader\r\n            className={classes.cardHeader}\r\n            title={\r\n              payment.id ? `Edit Payment Id: ${payment.id}` : \"Add new Payment\"\r\n            }\r\n            action={\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                startIcon={<Cancel />}\r\n                href=\"/app/paymentadjustments/payments\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            }\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Bill Type\"\r\n                  name=\"billTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={payment.billTypeId}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {billTypeData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Payment Type\"\r\n                  name=\"paymentTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={payment.paymentTypeId}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {paymentTypeData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Bill Type Source Id\"\r\n                  name=\"sourceBillTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={payment.sourceBillTypeId}\r\n                >\r\n                  {getBillTypes().map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.item}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"date\"\r\n                  label=\"Received Date\"\r\n                  name=\"receivedDate\"\r\n                  defaultValue=\"2021-11-01\"\r\n                  variant=\"outlined\"\r\n                  value={payment.receivedDate}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Payment Status\"\r\n                  name=\"status\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={payment.status}\r\n                >\r\n                  <option value=\"\"></option>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Check Number\"\r\n                  name=\"checkNumber\"\r\n                  variant=\"outlined\"\r\n                  value={payment.checkNumber}\r\n                ></TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Wire Fed Ref Number\"\r\n                  name=\"wireRefNumber\"\r\n                  variant=\"outlined\"\r\n                  value={payment.wireRefNumber}\r\n                ></TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Amount\"\r\n                  name=\"amount\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={payment.amount}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Comments\"\r\n                  name=\"comments\"\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                  value={payment.comments}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardActions}>\r\n            <Box>\r\n              <div></div>\r\n            </Box>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { ViewAgendaOutlined } from \"@material-ui/icons\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport { useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\nimport adjustmentTypeData from \"../../__mocks__/adjustmentTypeData\";\r\nimport adjustmentSubTypeData from \"../../__mocks__/adjustmentSubTypeData\";\r\n\r\nconst Row = ({ row, index }) => {\r\n  return (\r\n    <TableRow key={row.id}>\r\n      <TableCell align=\"center\">{index + 1}</TableCell>\r\n      <TableCell align=\"center\">\r\n        {billTypeData.find((x) => x.id === row.billTypeId).name}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {epoData.find((x) => x.id === row.sourceBillTypeId).loanNumber}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {adjustmentTypeData.find((x) => x.id === row.adjustmentTypeId).name}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {\r\n          adjustmentSubTypeData.find((x) => x.id === row.adjustmentSubTypeId)\r\n            .name\r\n        }\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        <NumberFormat\r\n          value={row.amountDue}\r\n          displayType={\"text\"}\r\n          thousandSeparator={true}\r\n          prefix={\"$\"}\r\n          decimalSeparator=\".\"\r\n          thousandsGroupStyle=\"thousand\"\r\n          decimalScale={2}\r\n          fixedDecimalScale={true}\r\n        />\r\n      </TableCell>\r\n      <TableCell align=\"center\">{row.comments}</TableCell>\r\n      <TableCell align=\"center\">\r\n        <IconButton\r\n          size=\"small\"\r\n          href={`/app/paymentadjustments/adjustments/${row.id}/edit`}\r\n        >\r\n          <Pencil size=\"20\" />\r\n        </IconButton>\r\n        <IconButton\r\n          size=\"small\"\r\n          href={`/app/billtypes/${\r\n            billTypeData.find((x) => x.id === row.billTypeId).shortName\r\n          }/${row.sourceBillTypeId}/edit`}\r\n        >\r\n          <ViewAgendaOutlined size=\"20\" />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nconst AdjustmentList = ({ data }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Bill Type</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Adjustment Type</TableCell>\r\n            <TableCell align=\"center\">Adjustment Sub Type</TableCell>\r\n            <TableCell align=\"center\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Comments</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <Row key={item.id} row={item} index={index} />\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdjustmentList;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Cancel, Save } from \"@material-ui/icons\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\nimport epdData from \"../../__mocks__/epdData\";\r\nimport pairoffData from \"../../__mocks__/pairoffData\";\r\nimport adjustmentData from \"../../__mocks__/adjustmentData/adjustmentData\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport adjustmentSubTypeData from \"../../__mocks__/adjustmentSubTypeData\";\r\nimport { useState } from \"react\";\r\nimport adjustmentTypeData from \"../../__mocks__/adjustmentTypeData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    \"& .MuiCardHeader-action\": {\r\n      marginTop: theme.spacing(0),\r\n      marginRight: theme.spacing(0),\r\n    },\r\n  },\r\n  cardActions: {\r\n    padding: theme.spacing(2),\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst AdjustmentForm = ({ adjustmentId }) => {\r\n  const classes = useStyles();\r\n\r\n  const [adjustment, setAdjustment] = useState(\r\n    adjustmentData.find((x) => x.id === adjustmentId) || {\r\n      id: undefined,\r\n      billTypeId: undefined,\r\n      sourceBillTypeId: undefined,\r\n      adjustmentTypeId: undefined,\r\n      adjustmentSubTypeId: undefined,\r\n      amountDue: undefined,\r\n      comments: undefined,\r\n    }\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setAdjustment({\r\n      ...adjustment,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  function getBillTypes() {\r\n    const billTypeId = parseInt(adjustment.billTypeId);\r\n    if (billTypeId === 1) {\r\n      return epoData.map((x) => ({\r\n        id: x.id,\r\n        item: `EPO Loan: ${x.loanNumber} (${x.status}) (Total Amount $${x.amountDue})`,\r\n      }));\r\n    } else if (billTypeId === 2) {\r\n      return epdData.map((x) => ({\r\n        id: x.id,\r\n        item: `EPD Loan: ${x.loanNumber} (${x.status}) (Total Amount $${x.amountDue})`,\r\n      }));\r\n    } else if (billTypeId === 3) {\r\n      return pairoffData.map((x) => ({\r\n        id: x.id,\r\n        item: `Trace Id: ${x.tradeId} (${x.status}) (Total Amount $${x.amountDue})`,\r\n      }));\r\n    } else {\r\n      return [{}];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate>\r\n      <Container maxWidth=\"lg\">\r\n        <Card>\r\n          <CardHeader\r\n            className={classes.cardHeader}\r\n            title={\r\n              adjustment.id\r\n                ? `Edit Adjustment Id: ${adjustment.id}`\r\n                : \"Add new Adjustment\"\r\n            }\r\n            action={\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                startIcon={<Cancel />}\r\n                href=\"/app/paymentadjustments/adjustments\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            }\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Bill Type\"\r\n                  name=\"billTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={adjustment.billTypeId}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {billTypeData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Adjustment Type\"\r\n                  name=\"adjustmentTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={adjustment.adjustmentTypeId}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {adjustmentTypeData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Bill Type Source Id\"\r\n                  name=\"sourceBillTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={adjustment.sourceBillTypeId}\r\n                >\r\n                  {getBillTypes().map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.item}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Select Adjustment Sub Type\"\r\n                  name=\"adjustmentSubTypeId\"\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  variant=\"outlined\"\r\n                  value={adjustment.adjustmentSubTypeId}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {adjustmentSubTypeData.map((option) => (\r\n                    <option key={option.id} value={option.id}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item md={6} xs={12} lg={3} xl={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">$</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  label=\"Amount Due\"\r\n                  name=\"amountDue\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={adjustment.amountDue}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Comments\"\r\n                  name=\"comments\"\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                  value={adjustment.comments}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardActions}>\r\n            <Box>\r\n              <div></div>\r\n            </Box>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<Save />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AdjustmentForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { CurrencyDollar } from \"heroicons-react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport SearchBox from \"../components/paymentAdjustmentList/SearchBox\";\r\nimport PaymentList from \"../components/paymentAdjustmentList/PaymentList\";\r\nimport PaymentForm from \"../components/paymentAdjustmentList/PaymentForm\";\r\nimport paymentData from \"../__mocks__/paymentData/paymentData\";\r\nimport adjustmentData from \"../__mocks__/adjustmentData/adjustmentData\";\r\nimport AdjustmentList from \"../components/paymentAdjustmentList/AdjustmentList\";\r\nimport AdjustmentForm from \"../components/paymentAdjustmentList/AdjustmentForm\";\r\nimport epoData from \"../__mocks__/epoData\";\r\nimport epdData from \"../__mocks__/epdData\";\r\nimport pairoffData from \"../__mocks__/pairoffData\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst PaymentAdjustmentList = ({ mode }) => {\r\n  const { type, typeid } = useParams();\r\n  const tabValue = type === \"payments\" ? 0 : 1;\r\n\r\n  function getBillTypeId(name, paId) {\r\n    let sourceBillTypeId = 0;\r\n    let billTypeId = 0;\r\n    if (name === \"payment\") {\r\n      const payment = paymentData.find((x) => x.id === parseInt(paId));\r\n      sourceBillTypeId = payment.sourceBillTypeId;\r\n      billTypeId = payment.billTypeId;\r\n    } else if (name === \"adjustment\") {\r\n      const adjustment = epdData.find((x) => x.id === parseInt(paId));\r\n      sourceBillTypeId = adjustment.sourceBillTypeId;\r\n      billTypeId = adjustment.billTypeId;\r\n    }\r\n\r\n    return billTypeId;\r\n  }\r\n\r\n  let billTypeId = 0;\r\n  if (mode === \"edit\") {\r\n    billTypeId = getBillTypeId(type, typeid);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Management: Payments & Adjustments</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h2\">Payments & Adjustments</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Tabs\r\n                        value={tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                      >\r\n                        <Tab\r\n                          label=\"Payments\"\r\n                          href=\"/app/paymentadjustments/payments\"\r\n                        />\r\n                        <Tab\r\n                          label=\"Adjustments\"\r\n                          href=\"/app/paymentadjustments/adjustments\"\r\n                        />\r\n                      </Tabs>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid container spacing={2}>\r\n                        {mode === \"list\" && (\r\n                          <Grid item xs={12}>\r\n                            <SearchBox />\r\n                          </Grid>\r\n                        )}\r\n\r\n                        <Grid item xs={12}>\r\n                          {tabValue === 0 &&\r\n                            (mode === \"list\" ? (\r\n                              <>\r\n                                <Divider />\r\n                                <PaymentList data={paymentData} />\r\n                              </>\r\n                            ) : (\r\n                              <PaymentForm\r\n                                billTypeId={billTypeId}\r\n                                paymentId={parseInt(typeid)}\r\n                              />\r\n                            ))}\r\n                          {tabValue === 1 &&\r\n                            (mode === \"list\" ? (\r\n                              <>\r\n                                <Divider />\r\n                                <AdjustmentList data={adjustmentData} />\r\n                              </>\r\n                            ) : (\r\n                              <AdjustmentForm\r\n                                billTypeId={billTypeId}\r\n                                adjustmentId={parseInt(typeid)}\r\n                              />\r\n                            ))}\r\n                        </Grid>\r\n                        {mode === \"list\" && (\r\n                          <Grid\r\n                            container\r\n                            item\r\n                            xs={12}\r\n                            justifyContent=\"flex-end\"\r\n                          >\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                              href={`/app/paymentadjustments/${type}/new`}\r\n                              startIcon={<CurrencyDollar />}\r\n                            >\r\n                              Add New\r\n                            </Button>\r\n                          </Grid>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentAdjustmentList;\r\n","import { Step, StepLabel, Stepper } from \"@material-ui/core\";\r\n\r\nconst BatchStepper = ({ steps, activeStep }) => {\r\n  return (\r\n    <Stepper activeStep={activeStep}>\r\n      {steps.map((step) => (\r\n        <Step key={step}>\r\n          <StepLabel>{step}</StepLabel>\r\n        </Step>\r\n      ))}\r\n    </Stepper>\r\n  );\r\n};\r\nexport default BatchStepper;\r\n","const BatchStepperContentPanel = ({ index, activeStep, children }) => {\r\n  return index === activeStep && <>{children}</>;\r\n};\r\n\r\nexport default BatchStepperContentPanel;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Fieldset from \"../common/Fieldset\";\r\n\r\nconst useStyles = makeStyles({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n});\r\n\r\nconst BranchBillTypeBox = ({\r\n  onPeriodChange,\r\n  period,\r\n  billingPeriods,\r\n  branches,\r\n  onBranchChange,\r\n  branchListData,\r\n  billTypes,\r\n  billTypeData,\r\n  onBillTypeChange,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid item xs={4}>\r\n        <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\r\n          <InputLabel htmlFor=\"period\">Choose Period</InputLabel>\r\n          <Select\r\n            native\r\n            label=\"Choose Period\"\r\n            inputProps={{\r\n              name: \"period\",\r\n              id: \"period\",\r\n            }}\r\n            value={period}\r\n            onChange={onPeriodChange}\r\n          >\r\n            {billingPeriods.map((x) => (\r\n              <option value={x.value} key={x.value}>\r\n                {x.description}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <FormControl variant=\"outlined\" style={{ width: \"100%\" }}>\r\n          <InputLabel htmlFor=\"branch\">Choose Branch(s)</InputLabel>\r\n          <Select\r\n            label=\"Choose Branch(s)\"\r\n            inputProps={{\r\n              name: \"branch\",\r\n              id: \"branch\",\r\n            }}\r\n            multiple\r\n            value={branches}\r\n            onChange={onBranchChange}\r\n            renderValue={(e) => (\r\n              <div className={classes.chips}>\r\n                {e.map((branch) => (\r\n                  <Chip\r\n                    key={branch}\r\n                    label={branchListData.find((b) => b.id === branch).name}\r\n                    className={classes.chip}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          >\r\n            {branchListData.map((branch) => (\r\n              <MenuItem key={branch.id} value={branch.id}>\r\n                {branch.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Fieldset label=\"Choose Bill Types\">\r\n          <FormGroup row>\r\n            {billTypeData.map((billtype) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    name={billtype.shortName}\r\n                    checked={billTypes[billtype.shortName]}\r\n                    onChange={onBillTypeChange}\r\n                  />\r\n                }\r\n                label={billtype.name}\r\n                key={billtype.id}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </Fieldset>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchBillTypeBox;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItemIcon,\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"auto\",\r\n  },\r\n  paper: {\r\n    width: 300,\r\n    height: 230,\r\n    overflow: \"auto\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nconst TransferList = ({ items }) => {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState([]);\r\n  const [left, setLeft] = useState(items);\r\n  const [right, setRight] = useState([]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = (items) => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map((item) => {\r\n          const labelId = `transfer-list-item-${item.id}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={item.id}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(item)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(item) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={item.name} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllRight}\r\n            disabled={left.length === 0}\r\n            aria-label=\"move all right\"\r\n          >\r\n            ≫\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllLeft}\r\n            disabled={right.length === 0}\r\n            aria-label=\"move all left\"\r\n          >\r\n            ≪\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TransferList;\r\n","import {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Fieldset from \"../common/Fieldset\";\r\nimport TransferList from \"../common/TransferList\";\r\n\r\nconst SuppressClientBillTypeBox = ({\r\n  periodDescription,\r\n  branches,\r\n  billTypes,\r\n  billTypeData,\r\n  clientData,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Period: </strong> {periodDescription}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Branch: </strong> {branches}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          <strong>Bill Types: </strong> {billTypes}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Fieldset label=\"Choose clients to Suppress\">\r\n          <TransferList items={clientData} />\r\n        </Fieldset>\r\n      </Grid>\r\n      <Grid item container xs={12}>\r\n        <Fieldset label=\"Choose items to suppress for the selected clients\">\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={<Checkbox color=\"primary\" />}\r\n              label=\"ALL\"\r\n            />\r\n            {billTypeData.map((billtype) => (\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"primary\" />}\r\n                label={billtype.name}\r\n                key={billtype.id}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        </Fieldset>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuppressClientBillTypeBox;\r\n","import {\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    margin: 0,\r\n    flexShrink: 0,\r\n    borderWidth: \"0px 0px thin\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n  },\r\n});\r\n\r\nconst BatchDetailTab = ({\r\n  tabs,\r\n  value,\r\n  onTabChange,\r\n  periodDescription,\r\n  branches,\r\n  billTypes,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Period: </strong> {periodDescription}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              <strong>Branch: </strong> {branches}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          <strong>Bill Types: </strong> {billTypes}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={onTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {tabs.map((tab) => (\r\n            <Tab key={tab} label={tab} />\r\n          ))}\r\n        </Tabs>\r\n        <Divider />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BatchDetailTab;\r\n","const BatchDetailTabPanel = ({ index, value, children }) => {\r\n  return index === value && <>{children}</>;\r\n};\r\n\r\nexport default BatchDetailTabPanel;\r\n","import {\r\n  FormControl,\r\n  OutlinedInput,\r\n  Box,\r\n  InputAdornment,\r\n  makeStyles,\r\n  InputLabel,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    borderRadius: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nconst SearchBox = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexwrap: \"wrap\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Box sx={{ mr: 1, width: 500 }}>\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n        >\r\n          <OutlinedInput\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            }\r\n            placeholder=\"Search by Client\"\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n      <Box sx={{ mr: 1, width: 200 }}>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          className={classes.formControl}\r\n        >\r\n          <InputLabel htmlFor=\"sortby\">Sort By</InputLabel>\r\n          <Select native label=\"Sort By\">\r\n            <option value=\"Client\">Client</option>\r\n            <option value=\"Amount\">Amount</option>\r\n            ))\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import invoiceListData from \"./invoiceListData\";\r\n\r\nconst batchFormData = [\r\n  {\r\n    batchId: 1001,\r\n    period: \"202108\",\r\n    branches: [1, 2, 3],\r\n    billTypes: {\r\n      epo: true,\r\n      epd: true,\r\n      pairoff: true,\r\n      fundingadj: true,\r\n      taxpen: true,\r\n    },\r\n    invoices: invoiceListData.filter((i) => i.batchId === 1001),\r\n  },\r\n  {\r\n    batchId: 1002,\r\n    period: \"202108\",\r\n    branches: [1, 2, 3],\r\n    billTypes: {\r\n      epo: true,\r\n      epd: true,\r\n      pairoff: true,\r\n      fundingadj: false,\r\n      taxpen: false,\r\n    },\r\n    invoices: invoiceListData.filter((i) => i.batchId === 1002),\r\n  },\r\n];\r\n\r\nexport default batchFormData;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ArrowForward,\r\n  Save,\r\n  Cancel,\r\n  ArrowBack,\r\n  Build,\r\n} from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport billingPeriods from \"../__mocks__/billingPeriods\";\r\nimport branchListData from \"../__mocks__/branchListData\";\r\nimport clientData from \"../__mocks__/clientData\";\r\nimport billTypeData from \"../__mocks__/billTypeData\";\r\nimport invoiceListData from \"../__mocks__/invoiceListData\";\r\n\r\nimport BatchStepper from \"../components/batchForm/BatchStepper\";\r\nimport BatchStepperContentPanel from \"../components/batchForm/BatchStepperContentPanel\";\r\nimport BranchBillTypeBox from \"../components/batchForm/BranchBillTypeBox\";\r\nimport SuppressClientBillTypeBox from \"../components/batchForm/SuppressClientBillTypeBox\";\r\nimport BatchDetailTab from \"../components/batchForm/BatchDetailTab\";\r\nimport BatchDetailTabPanel from \"../components/batchForm/BatchDetailTabPanel\";\r\nimport SearchBox from \"../components/batchForm/SearchBox\";\r\nimport InvoiceList from \"../components/batchForm/InvoiceList\";\r\nimport batchFormData from \"../__mocks__/batchFormData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: \"300px\",\r\n  },\r\n  actionButtons: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst BatchForm = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  const batchId = parseInt(id);\r\n\r\n  const stepLabels = [\r\n    \"Branch & Bill Types\",\r\n    \"Suppress Clients & Bill Types\",\r\n    \"Batch Detail\",\r\n  ];\r\n\r\n  const tabLabels = [\"Active\", \"Suppressed\"];\r\n\r\n  const selectedBatchData = batchFormData.find(\r\n    (batch) => batch.batchId === batchId\r\n  );\r\n  const selectedPeriod =\r\n    (selectedBatchData && selectedBatchData.period) || billingPeriods[1].value;\r\n\r\n  const selectedBranches =\r\n    (selectedBatchData && selectedBatchData.branches) || [];\r\n\r\n  const selectedBillTypes =\r\n    (selectedBatchData && selectedBatchData.billTypes) ||\r\n    Object.fromEntries(billTypeData.map((item) => [item.shortName, false]));\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  // const [period, setPeriod] = useState(billingPeriods[1].value);\r\n  // const [branches, setBranches] = useState([]);\r\n  // const [billTypes, setBillTypes] = useState(\r\n  //   Object.fromEntries(billTypeData.map((item) => [item.shortName, false]))\r\n  // );\r\n\r\n  const [period, setPeriod] = useState(selectedPeriod);\r\n  const [branches, setBranches] = useState(selectedBranches);\r\n  const [billTypes, setBillTypes] = useState(selectedBillTypes);\r\n\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleBranchChange = (e) => {\r\n    setBranches(e.target.value);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBuild = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handlePeriodChange = (e) => {\r\n    setPeriod(e.target.value);\r\n  };\r\n\r\n  const handleTabChange = (e, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const handleBillTypeChange = (e) => {\r\n    setBillTypes({ ...billTypes, [e.target.name]: e.target.checked });\r\n  };\r\n\r\n  const getPeriodDescription = () => {\r\n    return billingPeriods.find((p) => p.value === period).description;\r\n  };\r\n\r\n  const getSelectedBranches = () => {\r\n    return branches\r\n      .map((branch) => branch.name)\r\n      .reduce((p, n) => {\r\n        if (p === \"\") return n;\r\n        return p + \", \" + n;\r\n      }, \"\");\r\n  };\r\n\r\n  const getSelectedBillTypes = () => {\r\n    return Object.entries(billTypes)\r\n      .filter(([k, v]) => v)\r\n      .map(([k, v]) => billTypeData.find((item) => item.shortName === k).name)\r\n      .reduce((p, n) => {\r\n        if (p === \"\") return n;\r\n        return p + \", \" + n;\r\n      }, \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Billing: {id > 0 ? \"Edit Batch\" : \"Create New Batch\"} </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"xl\">\r\n          <Grid container spacing={2}>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography variant=\"h2\">\r\n                  {batchId > 0 ? `Edit Batch: ${id}` : \"Create a new batch\"}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  href=\"/app/batches\"\r\n                  startIcon={<Cancel />}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    spacing={2}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <Paper square>\r\n                        <BatchStepper\r\n                          steps={stepLabels}\r\n                          activeStep={activeStep}\r\n                        />\r\n                      </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid container spacing={2}>\r\n                        <BatchStepperContentPanel\r\n                          index={0}\r\n                          activeStep={activeStep}\r\n                        >\r\n                          <BranchBillTypeBox\r\n                            period={period}\r\n                            onPeriodChange={handlePeriodChange}\r\n                            billingPeriods={billingPeriods}\r\n                            branches={branches}\r\n                            onBranchChange={handleBranchChange}\r\n                            branchListData={branchListData}\r\n                            billTypes={billTypes}\r\n                            billTypeData={billTypeData}\r\n                            onBillTypeChange={handleBillTypeChange}\r\n                          />\r\n                        </BatchStepperContentPanel>\r\n                        <BatchStepperContentPanel\r\n                          index={1}\r\n                          activeStep={activeStep}\r\n                        >\r\n                          <SuppressClientBillTypeBox\r\n                            periodDescription={getPeriodDescription()}\r\n                            branches={getSelectedBranches()}\r\n                            billTypes={getSelectedBillTypes()}\r\n                            billTypeData={billTypeData}\r\n                            clientData={clientData}\r\n                          />\r\n                        </BatchStepperContentPanel>\r\n                        <BatchStepperContentPanel\r\n                          index={2}\r\n                          activeStep={activeStep}\r\n                        >\r\n                          <BatchDetailTab\r\n                            tabs={tabLabels}\r\n                            value={tabValue}\r\n                            onTabChange={handleTabChange}\r\n                            periodDescription={getPeriodDescription()}\r\n                            branches={getSelectedBranches()}\r\n                            billTypes={getSelectedBillTypes()}\r\n                          />\r\n\r\n                          <Grid item xs={12}>\r\n                            <SearchBox />\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12}>\r\n                            <BatchDetailTabPanel index={0} value={tabValue}>\r\n                              <InvoiceList\r\n                                data={invoiceListData.filter(\r\n                                  (d) => d.active && d.batchId === batchId\r\n                                )}\r\n                              />\r\n                            </BatchDetailTabPanel>\r\n                            <BatchDetailTabPanel index={1} value={tabValue}>\r\n                              <InvoiceList\r\n                                data={invoiceListData.filter(\r\n                                  (d) => !d.active && d.batchId === batchId\r\n                                )}\r\n                              />\r\n                            </BatchDetailTabPanel>\r\n                          </Grid>\r\n                        </BatchStepperContentPanel>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Grid container justifyContent=\"space-between\">\r\n                        <div>\r\n                          <Button\r\n                            disabled={activeStep === 0}\r\n                            className={classes.actionButtons}\r\n                            startIcon={<ArrowBack />}\r\n                            onClick={handleBack}\r\n                          >\r\n                            Back\r\n                          </Button>\r\n                        </div>\r\n                        <div>\r\n                          {activeStep < 2 && (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              className={classes.actionButtons}\r\n                              startIcon={<Save />}\r\n                            >\r\n                              Save\r\n                            </Button>\r\n                          )}\r\n\r\n                          {activeStep < 2 && (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              startIcon={<ArrowForward />}\r\n                              onClick={handleNext}\r\n                            >\r\n                              Next\r\n                            </Button>\r\n                          )}\r\n\r\n                          {activeStep >= 2 && (\r\n                            <Button\r\n                              disabled={activeStep > 2}\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              startIcon={<Build />}\r\n                              onClick={handleBuild}\r\n                            >\r\n                              Build Batch\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BatchForm;\r\n","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { Payment, Adjust } from \"@material-ui/icons\";\r\nimport Fieldset from \"../common/Fieldset\";\r\n\r\nconst General = ({ clientData }) => {\r\n  return (\r\n    <Grid container spacing={2} direction=\"row\">\r\n      <Grid item xs={4}>\r\n        <Grid container spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Fieldset label=\"LEI\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.lei}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Address\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.address.street}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"City\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.address.city}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"State\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.address.state}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Zip\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.address.zip}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Grid container spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Fieldset label=\"Approved Overall\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.isApproved}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Actively Dual Approved\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.isDualApproved}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Delegated Status\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.delegatedStatus}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Non-Delegated Status\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.nonDelegatedStatus}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Delegated Approval Date\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.delegatedApprovedDate}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Non-Delegated Approval Date\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.nonDelegatedApprovedDate}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Grid container spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Fieldset label=\"Division\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.division}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Delegated AE\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.delegatedAe}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Non-Delegated AE\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.nonDelegatedAe}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Delegated AR\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.delegatedAr}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Non-Delegated AR\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.nonDelegatedAr}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Delegated CRM\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.delegatedCrm}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n          <Grid item>\r\n            <Fieldset label=\"Non-Delegated CRM\">\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {clientData.nonDelegatedCrm}\r\n              </Typography>\r\n            </Fieldset>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Payment />}\r\n              href=\"/app/paymentadjustments/payments/new\"\r\n            >\r\n              Make a Payment\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              startIcon={<Adjust />}\r\n              href=\"/app/paymentadjustments/adjustments/new\"\r\n            >\r\n              Make an Adjustment\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default General;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst Contacts = ({ contactDetails }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">First Name</TableCell>\r\n            <TableCell align=\"center\">Last Name</TableCell>\r\n            <TableCell align=\"center\">Job Title</TableCell>\r\n            <TableCell align=\"center\">Email</TableCell>\r\n            <TableCell align=\"center\">Mobile Phone</TableCell>\r\n            <TableCell align=\"center\">Contact Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {contactDetails\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">{item.firstName}</TableCell>\r\n                <TableCell align=\"center\">{item.lastName}</TableCell>\r\n                <TableCell align=\"center\">{item.jobTitle}</TableCell>\r\n                <TableCell align=\"center\">{item.email}</TableCell>\r\n                <TableCell align=\"center\">{item.mobilePhone}</TableCell>\r\n                <TableCell align=\"center\">{item.contactType}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={contactDetails.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport brandListData from \"../../__mocks__/brandListData\";\r\nimport channelListData from \"../../__mocks__/channelListData\";\r\nimport billingPeriods from \"../../__mocks__/billingPeriods\";\r\nimport paymentTypeData from \"../../__mocks__/paymentTypeData\";\r\nimport adjustmentTypeData from \"../../__mocks__/adjustmentTypeData\";\r\nimport adjustmentSubTypeData from \"../../__mocks__/adjustmentSubTypeData\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from \"@material-ui/icons\";\r\n\r\nconst Row = (props) => {\r\n  const { row, index } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell align=\"center\">{index + 1}</TableCell>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {brandListData.find((x) => x.id === row.brand).name}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {channelListData.find((x) => x.id === row.channel).name}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {\r\n            billingPeriods.find((x) => x.value === row.billingPeriod)\r\n              .description\r\n          }\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.loanNumber}</TableCell>\r\n        <TableCell align=\"center\">\r\n          <NumberFormat\r\n            value={row.amountDue}\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            prefix={\"$\"}\r\n            decimalSeparator=\".\"\r\n            thousandsGroupStyle=\"thousand\"\r\n            decimalScale={2}\r\n            fixedDecimalScale={true}\r\n          />\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <NumberFormat\r\n            value={\r\n              row.amountDue -\r\n              row.payments.reduce((s, n) => s + n.amount, 0) -\r\n              row.adjustments.reduce((s, n) => s + n.amountDue, 0)\r\n            }\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            prefix={\"$\"}\r\n            decimalSeparator=\".\"\r\n            thousandsGroupStyle=\"thousand\"\r\n            decimalScale={2}\r\n            fixedDecimalScale={true}\r\n          />\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {\r\n            <StyledLabel\r\n              label={row.status}\r\n              bgColor={\r\n                row.status === \"Pending\"\r\n                  ? \"rgb(255, 152, 0)\"\r\n                  : \"rgb(76, 175, 80)\"\r\n              }\r\n            />\r\n          }\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.comments}</TableCell>\r\n        <TableCell align=\"center\">\r\n          <IconButton size=\"medium\" href={`/app/billtypes/epo/${row.id}`}>\r\n            <Pencil size=\"20\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Payments\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"payments\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Received Date</TableCell>\r\n                    <TableCell>Check #</TableCell>\r\n                    <TableCell>Payment Type</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.payments.map((payment) => (\r\n                    <TableRow key={payment.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {payment.receivedDate}\r\n                      </TableCell>\r\n                      <TableCell>{payment.checkNumber}</TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          paymentTypeData.find(\r\n                            (x) => x.id === payment.paymentTypeId\r\n                          ).name\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <NumberFormat\r\n                          value={payment.amount}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"$\"}\r\n                          decimalSeparator=\".\"\r\n                          thousandsGroupStyle=\"thousand\"\r\n                          decimalScale={2}\r\n                          fixedDecimalScale={true}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Adjustments\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"payments\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Adjustment Type</TableCell>\r\n                    <TableCell>Adjustment Sub Type</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Amount Due</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.adjustments.map((adjustment) => (\r\n                    <TableRow key={adjustment.id}>\r\n                      <TableCell>\r\n                        {\r\n                          adjustmentTypeData.find(\r\n                            (x) => x.id === adjustment.adjustmentTypeId\r\n                          ).name\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {\r\n                          adjustmentSubTypeData.find(\r\n                            (x) => x.id === adjustment.adjustmentSubTypeId\r\n                          ).name\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>{adjustment.status}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <NumberFormat\r\n                          value={adjustment.amountDue}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"$\"}\r\n                          decimalSeparator=\".\"\r\n                          thousandsGroupStyle=\"thousand\"\r\n                          decimalScale={2}\r\n                          fixedDecimalScale={true}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EpoBox = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\" padding=\"none\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell />\r\n            <TableCell align=\"center\">Brand</TableCell>\r\n            <TableCell align=\"center\">Channel</TableCell>\r\n            <TableCell align=\"center\">Billing Period</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Total Amount Due</TableCell>\r\n            <TableCell align=\"center\">Balance Amount</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Comments</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <Row key={item.id} row={item} index={index} />\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpoBox;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport brandListData from \"../../__mocks__/brandListData\";\r\nimport channelListData from \"../../__mocks__/channelListData\";\r\nimport billingPeriods from \"../../__mocks__/billingPeriods\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\nimport { Pencil } from \"heroicons-react\";\r\n\r\nconst EpdBox = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\" padding=\"none\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Brand</TableCell>\r\n            <TableCell align=\"center\">Channel</TableCell>\r\n            <TableCell align=\"center\">Billing Period</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Comments</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {brandListData.find((x) => x.id === item.brand).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {channelListData.find((x) => x.id === item.channel).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    billingPeriods.find((x) => x.value === item.billingPeriod)\r\n                      .description\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.loanNumber}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <NumberFormat\r\n                    value={item.amountDue}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    <StyledLabel\r\n                      label={item.status}\r\n                      bgColor={\r\n                        item.status === \"Pending\"\r\n                          ? \"rgb(255, 152, 0)\"\r\n                          : \"rgb(76, 175, 80)\"\r\n                      }\r\n                    />\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.comments}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    href={`/app/billtypes/epd/${item.id}`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpdBox;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport brandListData from \"../../__mocks__/brandListData\";\r\nimport channelListData from \"../../__mocks__/channelListData\";\r\nimport billingPeriods from \"../../__mocks__/billingPeriods\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\nimport { Pencil } from \"heroicons-react\";\r\n\r\nconst PairoffBox = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\" padding=\"none\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Brand</TableCell>\r\n            <TableCell align=\"center\">Channel</TableCell>\r\n            <TableCell align=\"center\">Billing Period</TableCell>\r\n            <TableCell align=\"center\">Trace Id</TableCell>\r\n            <TableCell align=\"right\">Amount Due</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Comments</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {brandListData.find((x) => x.id === item.brand).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {channelListData.find((x) => x.id === item.channel).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    billingPeriods.find((x) => x.value === item.billingPeriod)\r\n                      .description\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.tradeId}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <NumberFormat\r\n                    value={item.amountDue}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    <StyledLabel\r\n                      label={item.status}\r\n                      bgColor={\r\n                        item.status === \"Pending\"\r\n                          ? \"rgb(255, 152, 0)\"\r\n                          : \"rgb(76, 175, 80)\"\r\n                      }\r\n                    />\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.comments}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    href={`/app/billtypes/pairoff/${item.id}`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PairoffBox;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  InputLabel,\r\n  makeStyles,\r\n  OutlinedInput,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport EpoBox from \"./EpoBox\";\r\nimport EpdBox from \"./EpdBox\";\r\nimport PairoffBox from \"./PairoffBox\";\r\nimport { Search } from \"heroicons-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst BillTypes = ({ billTypeData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Accordion expanded={true}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"epo-panel\"\r\n          id=\"epo-panel\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            {billTypeData[0].name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container item spacing={2}>\r\n                <Grid item xs={3}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <OutlinedInput\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                          <Search />\r\n                        </InputAdornment>\r\n                      }\r\n                      placeholder=\"Search by Loan Number\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <FormControl variant=\"outlined\" fullWidth>\r\n                    <InputLabel htmlFor=\"sortby\">Search By Status</InputLabel>\r\n                    <Select native label=\"Search by Status\">\r\n                      <option value=\"\"></option>\r\n                      <option value=\"Pending\">Pending</option>\r\n                      <option value=\"Billed\">Billed</option>\r\n                      <option value=\"Closed\">Closed</option>\r\n                      ))\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <EpoBox data={billTypeData[0].data} />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"epd-panel\"\r\n          id=\"epd-panel\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            {billTypeData[1].name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container item spacing={2}>\r\n                <Grid item xs={3}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <OutlinedInput\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                          <Search />\r\n                        </InputAdornment>\r\n                      }\r\n                      placeholder=\"Search by Loan Number\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <FormControl variant=\"outlined\" fullWidth>\r\n                    <InputLabel htmlFor=\"sortby\">Search By Status</InputLabel>\r\n                    <Select native label=\"Search by Status\">\r\n                      <option value=\"\"></option>\r\n                      <option value=\"Pending\">Pending</option>\r\n                      <option value=\"Billed\">Billed</option>\r\n                      <option value=\"Closed\">Closed</option>\r\n                      ))\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <EpdBox data={billTypeData[1].data} />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"pairoff-panel\"\r\n          id=\"pairoff-panel\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            {billTypeData[2].name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container item spacing={2}>\r\n                <Grid item xs={3}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <OutlinedInput\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                          <Search />\r\n                        </InputAdornment>\r\n                      }\r\n                      placeholder=\"Search by Trace Id\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <FormControl variant=\"outlined\" fullWidth>\r\n                    <InputLabel htmlFor=\"sortby\">Search By Status</InputLabel>\r\n                    <Select native label=\"Search by Status\">\r\n                      <option value=\"\"></option>\r\n                      <option value=\"Pending\">Pending</option>\r\n                      <option value=\"Billed\">Billed</option>\r\n                      <option value=\"Closed\">Closed</option>\r\n                      ))\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <PairoffBox data={billTypeData[2].data} />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"fundadj-panel\"\r\n          id=\"fundadj-panel\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Funding Adjustments\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.heading}>\r\n                Not available for viewing\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"fundadj-panel\"\r\n          id=\"fundadj-panel\"\r\n        >\r\n          <Typography className={classes.heading}>Tax Penalties</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.heading}>\r\n                Not available for viewing\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillTypes;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\n\r\nconst PaymentBox = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\" padding=\"none\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Bill Type</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Received Date</TableCell>\r\n            <TableCell align=\"center\">Amount</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {billTypeData.find((x) => x.id === item.billTypeId).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    epoData.find((x) => x.id === item.sourceBillTypeId)\r\n                      .loanNumber\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.receivedDate}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <NumberFormat\r\n                    value={item.amount}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    <StyledLabel\r\n                      label={item.status}\r\n                      bgColor={\r\n                        item.status === \"Pending\"\r\n                          ? \"rgb(255, 152, 0)\"\r\n                          : \"rgb(76, 175, 80)\"\r\n                      }\r\n                    />\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    //href={`/app/billtypes/epo/${row.id}/edit`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentBox;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport StyledLabel from \"../common/StyledLabel\";\r\nimport { Pencil } from \"heroicons-react\";\r\nimport billTypeData from \"../../__mocks__/billTypeData\";\r\nimport epoData from \"../../__mocks__/epoData\";\r\n\r\nconst AdjustmentBox = ({ data }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\" padding=\"none\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"center\">Bill Type</TableCell>\r\n            <TableCell align=\"center\">Loan Number</TableCell>\r\n            <TableCell align=\"center\">Amount</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {billTypeData.find((x) => x.id === item.billTypeId).name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    epoData.find((x) => x.id === item.sourceBillTypeId)\r\n                      .loanNumber\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <NumberFormat\r\n                    value={item.amountDue}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                    decimalSeparator=\".\"\r\n                    thousandsGroupStyle=\"thousand\"\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {\r\n                    <StyledLabel\r\n                      label={item.status}\r\n                      bgColor={\r\n                        item.status === \"Pending\"\r\n                          ? \"rgb(255, 152, 0)\"\r\n                          : \"rgb(76, 175, 80)\"\r\n                      }\r\n                    />\r\n                  }\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    size=\"medium\"\r\n                    //href={`/app/billtypes/epo/${row.id}/edit`}\r\n                  >\r\n                    <Pencil size=\"20\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={5}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdjustmentBox;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  makeStyles,\r\n  OutlinedInput,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore, Search } from \"@material-ui/icons\";\r\nimport PaymentBox from \"./PaymentBox\";\r\nimport AdjustmentBox from \"./AdjustmentBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst PaymentAdjustments = ({ paymentAdjustmentsData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Accordion expanded={true}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"payment-panel\"\r\n          id=\"payment-panel\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            {paymentAdjustmentsData[0].name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container item spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <OutlinedInput\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                          <Search />\r\n                        </InputAdornment>\r\n                      }\r\n                      placeholder=\"Search by Loan Number/trade id\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <PaymentBox data={paymentAdjustmentsData[0].data} />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          aria-controls=\"adjustment-panel\"\r\n          id=\"adjustment-panel\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            {paymentAdjustmentsData[1].name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container item spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                    <OutlinedInput\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                          <Search />\r\n                        </InputAdornment>\r\n                      }\r\n                      placeholder=\"Search by Loan Number/trade id\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <AdjustmentBox data={paymentAdjustmentsData[1].data} />\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentAdjustments;\r\n","import { Box, FormControl, Grid, InputLabel, Select } from \"@material-ui/core\";\r\nimport billingPeriods from \"../../__mocks__/billingPeriods\";\r\nimport InvoiceList from \"../batchForm/InvoiceList\";\r\n\r\nconst Invoices = ({ invoiceData }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Box sx={{ mr: 1 }}>\r\n            <FormControl variant=\"outlined\" style={{ width: 180 }}>\r\n              <InputLabel htmlFor=\"period\">Search Period</InputLabel>\r\n              <Select\r\n                native\r\n                label=\"Search Period\"\r\n                inputProps={{\r\n                  name: \"period\",\r\n                  id: \"period\",\r\n                }}\r\n              >\r\n                {billingPeriods.map((x) => (\r\n                  <option value={x.value} key={x.value}>\r\n                    {x.description}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box sx={{ ml: 3 }}>\r\n            <FormControl variant=\"outlined\" style={{ width: 200 }}>\r\n              <InputLabel htmlFor=\"period\">Search by Status</InputLabel>\r\n              <Select\r\n                native\r\n                label=\"Search by Status\"\r\n                inputProps={{\r\n                  name: \"status\",\r\n                  id: \"status\",\r\n                }}\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Pending\">Pending</option>\r\n                <option value=\"Billed\">Billed</option>\r\n                <option value=\"Closed\">Closed</option>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <InvoiceList data={invoiceData} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Invoices;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Cancel, Refresh } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport General from \"../components/clientDetail/General\";\r\nimport Contacts from \"../components/clientDetail/Contacts\";\r\nimport clientData from \"../__mocks__/clientData\";\r\nimport BillTypes from \"../components/clientDetail/BillTypes\";\r\n\r\nimport epoData from \"../__mocks__/epoData\";\r\nimport epdData from \"../__mocks__/epdData\";\r\nimport pairoffData from \"../__mocks__/pairoffData\";\r\nimport PaymentAdjustments from \"../components/clientDetail/PaymentAdjustments\";\r\nimport paymentData from \"../__mocks__/paymentData/paymentData\";\r\nimport invoiceListData from \"../__mocks__/invoiceListData\";\r\n\r\nimport adjustmentData from \"../__mocks__/adjustmentData/adjustmentData\";\r\nimport Invoices from \"../components/clientDetail/Invoices\";\r\n\r\nconst ClientDetail = () => {\r\n  const { id } = useParams();\r\n\r\n  const clientId = parseInt(id);\r\n\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleTabChange = (e, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const selectedClientData = clientData.find(\r\n    (client) => client.id === clientId\r\n  );\r\n\r\n  const billTypeData = [\r\n    {\r\n      name: \"Early Payoffs\",\r\n      data: epoData.filter((x) => x.clientId === clientId),\r\n    },\r\n    {\r\n      name: \"Early Payment Defaults\",\r\n      data: epdData.filter((x) => x.clientId === clientId),\r\n    },\r\n    {\r\n      name: \"Pairoffs\",\r\n      data: pairoffData.filter((x) => x.clientId === clientId),\r\n    },\r\n  ];\r\n\r\n  const paymentAdjustmentsData = [\r\n    { name: \"Payments\", data: paymentData },\r\n    { name: \"Adjustments\", data: adjustmentData },\r\n  ];\r\n\r\n  const invoiceData = invoiceListData.filter((x) => x.clientId === clientId);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Management: Client Detail</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{ py: 3, backgroundColor: \"background.default\", minHeight: \"100%\" }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid container justifyContent=\"space-between\">\r\n                <Grid item>\r\n                  <Typography variant=\"h2\">Client Detail</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    href=\"/app/clients\"\r\n                    startIcon={<Cancel />}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardHeader\r\n                  subheader={`DBA: ${selectedClientData.dba}`}\r\n                  title={`${selectedClientData.name} (NMLS#: ${selectedClientData.nmls})`}\r\n                  action={\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      startIcon={<Refresh />}\r\n                    >\r\n                      Refresh Client\r\n                    </Button>\r\n                  }\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                  <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Tabs\r\n                        value={tabValue}\r\n                        onChange={handleTabChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                      >\r\n                        <Tab label=\"General\" />\r\n                        <Tab label=\"Contacts\" />\r\n                        <Tab label=\"Bill Types\" />\r\n                        <Tab label=\"Payments/Adjustments\" />\r\n                        <Tab label=\"Invoices\" />\r\n                      </Tabs>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {tabValue === 0 && (\r\n                        <General clientData={selectedClientData} />\r\n                      )}\r\n                      {tabValue === 1 && (\r\n                        <Contacts\r\n                          contactDetails={selectedClientData.contacts}\r\n                        />\r\n                      )}\r\n                      {tabValue === 2 && (\r\n                        <BillTypes billTypeData={billTypeData} />\r\n                      )}\r\n                      {tabValue === 3 && (\r\n                        <PaymentAdjustments\r\n                          paymentAdjustmentsData={paymentAdjustmentsData}\r\n                        />\r\n                      )}\r\n                      {tabValue === 4 && <Invoices invoiceData={invoiceData} />}\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientDetail;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AppLayout from \"./components/AppLayout\";\r\nimport BatchAndInvoice from \"./pages/BatchAndInvoice\";\r\nimport BillTypeList from \"./pages/BillTypeList\";\r\nimport ClientList from \"./pages/ClientList\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport ImportDataForm from \"./pages/ImportDataForm\";\r\nimport ViewInvoice from \"./pages/ViewInvoice\";\r\nimport QuickLinks from \"./pages/QuickLinks\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport PaymentAdjustmentList from \"./pages/PaymentAdjustmentList\";\r\nimport BatchForm from \"./pages/BatchForm\";\r\nimport ClientDetail from \"./pages/ClientDetail\";\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"app\",\r\n    element: <AppLayout />,\r\n    children: [\r\n      { path: \"dashboard\", element: <Dashboard /> },\r\n      { path: \"links\", element: <QuickLinks /> },\r\n      { path: \"importdata\", element: <ImportDataForm /> },\r\n\r\n      { path: \"batches\", element: <BatchAndInvoice /> },\r\n      { path: \"batches/new\", element: <BatchForm /> },\r\n      { path: \"batches/:id/edit\", element: <BatchForm /> },\r\n\r\n      { path: \"invoices\", element: <ViewInvoice /> },\r\n      { path: \"clients\", element: <ClientList /> },\r\n      { path: \"clients/:id/detail\", element: <ClientDetail /> },\r\n\r\n      { path: \"billtypes\", element: <Navigate to=\"/app/billtypes/epo\" /> },\r\n      {\r\n        path: \"billtypes/:billtypename\",\r\n        element: <BillTypeList mode=\"list\" />,\r\n      },\r\n      {\r\n        path: \"billtypes/:billtypename/new\",\r\n        element: <BillTypeList mode=\"new\" />,\r\n      },\r\n      {\r\n        path: \"billtypes/:billtypename/:billtypeid/edit\",\r\n        element: <BillTypeList mode=\"edit\" />,\r\n      },\r\n\r\n      {\r\n        path: \"paymentadjustments\",\r\n        element: <Navigate to=\"/app/paymentadjustments/payments\" />,\r\n      },\r\n      {\r\n        path: \"paymentadjustments/:type\",\r\n        element: <PaymentAdjustmentList mode=\"list\" />,\r\n      },\r\n      {\r\n        path: \"paymentadjustments/:type/new\",\r\n        element: <PaymentAdjustmentList mode=\"new\" />,\r\n      },\r\n      {\r\n        path: \"paymentadjustments/:type/:typeid/edit\",\r\n        element: <PaymentAdjustmentList mode=\"edit\" />,\r\n      },\r\n\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    children: [\r\n      { path: \"/\", element: <Navigate to=\"/app/links\" /> },\r\n      { path: \"app\", element: <Navigate to=\"/app/links\" /> },\r\n      { path: \"404\", element: <NotFound /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n];\r\n","import { createTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#f4f6f8\",\r\n      paper: \"#ffffff\",\r\n    },\r\n    primary: {\r\n      contrastText: \"#ffffff\",\r\n      main: \"#009FC7\",\r\n    },\r\n    secondary: {\r\n      main: \"#004261\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    text: {\r\n      primary: \"#172b4d\",\r\n      secondary: \"#6b778c\",\r\n    },\r\n  },\r\n  shadows: [\r\n    \"none\",\r\n    \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n    \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n  ],\r\n  typography: {\r\n    h1: {\r\n      fontWeight: 500,\r\n      fontSize: 35,\r\n      letterSpacing: \"-0.24px\",\r\n    },\r\n    h2: {\r\n      fontWeight: 500,\r\n      fontSize: 29,\r\n      letterSpacing: \"-0.24px\",\r\n    },\r\n    h3: {\r\n      fontWeight: 500,\r\n      fontSize: 24,\r\n      letterSpacing: \"-0.06px\",\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n      fontSize: 20,\r\n      letterSpacing: \"-0.06px\",\r\n    },\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 16,\r\n      letterSpacing: \"-0.05px\",\r\n    },\r\n    h6: {\r\n      fontWeight: 500,\r\n      fontSize: 14,\r\n      letterSpacing: \"-0.05px\",\r\n    },\r\n    overline: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 10,\r\n  },\r\n  props: {\r\n    MuiFormControl: {\r\n      size: \"small\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        borderRadius: 8,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        fontSize: \"0.83rem\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRoutes } from \"react-router\";\r\nimport GlobalStyles from \"./components/GlobalStyles\";\r\nimport { routes } from \"./routes\";\r\nimport theme from \"./theme\";\r\n\r\nconst App = () => {\r\n  const content = useRoutes(routes);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {content}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}